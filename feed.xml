<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://aadyadaita.github.io/apcsa_indiv_repo_tri1/feed.xml" rel="self" type="application/atom+xml" /><link href="https://aadyadaita.github.io/apcsa_indiv_repo_tri1/" rel="alternate" type="text/html" /><updated>2023-01-23T03:03:14-06:00</updated><id>https://aadyadaita.github.io/apcsa_indiv_repo_tri1/feed.xml</id><title type="html">Aadyaâ€™s CSA Fastpage</title><subtitle>Hey this is Aadya's fastpage</subtitle><entry><title type="html">All Vocab</title><link href="https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2023/01/22/all-vocab.html" rel="alternate" type="text/html" title="All Vocab" /><published>2023-01-22T00:00:00-06:00</published><updated>2023-01-22T00:00:00-06:00</updated><id>https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2023/01/22/all-vocab</id><author><name></name></author><summary type="html"><![CDATA[Casting and Ranging of Variables]]></summary></entry><entry><title type="html">Unit 1 Code.org Vocab</title><link href="https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2023/01/22/Unit-1-Code.org-Vocab.html" rel="alternate" type="text/html" title="Unit 1 Code.org Vocab" /><published>2023-01-22T00:00:00-06:00</published><updated>2023-01-22T00:00:00-06:00</updated><id>https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2023/01/22/Unit-1-Code.org-Vocab</id><author><name></name></author><summary type="html"><![CDATA[Object Oriented Programming Basic Vocab]]></summary></entry><entry><title type="html">Java Usage</title><link href="https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/12/13/Unit9.html" rel="alternate" type="text/html" title="Java Usage" /><published>2022-12-13T00:00:00-06:00</published><updated>2022-12-13T00:00:00-06:00</updated><id>https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/12/13/Unit9</id><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Inheritance Notes</title><link href="https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/12/12/Inheritance.html" rel="alternate" type="text/html" title="Inheritance Notes" /><published>2022-12-12T00:00:00-06:00</published><updated>2022-12-12T00:00:00-06:00</updated><id>https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/12/12/Inheritance</id><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[Creating References usin Inheritance hierarcies Superclasses and subclasses are generally organized into a single root tree structure called an inheritance hierarchy. In this type of hierarchy, attributes and methods that are associated with a specific class are inherited by lower levels of the hierarchy. When working with a hierarchy of subclasses and superclasses, the object type and reference type can be different when instantiating an object variable. Example: Fruit fruit1 = new Apple(); In this case, the reference type is declared with the superclass, while the object type is declared with the subclass.]]></summary></entry><entry><title type="html">2019 FRQ 4</title><link href="https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/12/11/frq4.html" rel="alternate" type="text/html" title="2019 FRQ 4" /><published>2022-12-11T00:00:00-06:00</published><updated>2022-12-11T00:00:00-06:00</updated><id>https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/12/11/frq4</id><author><name></name></author><summary type="html"><![CDATA[]]></summary></entry></feed>