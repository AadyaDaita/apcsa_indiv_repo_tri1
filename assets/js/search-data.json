{
  
    
        "post0": {
            "title": "Js_html",
            "content": "",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/09/25/js_html.html",
            "relUrl": "/2022/09/25/js_html.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Clothing_site",
            "content": "Collection of bags Html Code Example Live Demo . .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/09/25/clothing_site.html",
            "relUrl": "/2022/09/25/clothing_site.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Unit 1 Code.org Vocab",
            "content": "Object Oriented Programming Basic Vocab . attribute - a characteristic of an object . | behavior - an action that an object can perform . | class - a programmer-defined blueprint from which objects are created . | constructor - a block of code that has the same name as the class and tells the computer how to create a new object . | debugging - finding and fixing problems in an algorithm or program . | instantiate - to call the constructor to create an object . | object - an instance of a class . | object-oriented programming - an approach to creating and using models of physical or imagined objects . | state - the attributes of an object that are represented by its instance variables . | constructor signature - the first line of the constructor which includes the public keyword, the constructor name, and the values to specify when an object is created . | inheritance - an object-oriented programming principle where a subclass inherits the attributes and behaviors of a superclass . | subclass - a class that extends a superclass and inherits its attributes and behaviors . | superclass - a class that can be extended to create subclasses . | method signature - consists of a name and parameter list . | Method Decomposition - the process of breaking a problem down into smaller parts to write methods for each part . | edge case - a bug that occurs at the highest or lowest end of a range of possible values or in extreme situations . | redundant code - code that is unnecessary . | inheritance hierarchy - where a class serves as a superclass for more than one subclass . | . . .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/09/25/Unit-1-Code.org-Vocab.html",
            "relUrl": "/2022/09/25/Unit-1-Code.org-Vocab.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Title",
            "content": "/* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence, featuring a Stream Algorithm * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/09/24/fibonacci.html",
            "relUrl": "/2022/09/24/fibonacci.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Iteration Monkey Lab",
            "content": "2D Array with different ASCII symbols + extended rhyme . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series,featuring Monkey Jumpers */ /** * Class for Monkeys: a 2D array of Monkeys * As well as method to print the Poem */ class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Monkey 0 { &quot; -0-&quot;, //[0][0] head &quot;C oo&quot;, //[0][1] eyes &quot; _( ^)&quot;, //[0][2] mouth &quot; - &quot; //[0][3] legs }, //Monkey 1 { &quot; -1-&quot;, //[0][0] head &quot;C oo&quot;, //[0][1] eyes &quot; _( ^)&quot;, //[0][2] mouth &quot; - &quot; //[0][3] legs }, //Monkey 2 { &quot; -2-&quot;, //[0][0] head &quot;C oo&quot;, //[0][1] eyes &quot; _( ^)&quot;, //[0][2] mouth &quot; - &quot; //[0][3] legs }, //Monkey 3 { &quot; -3-&quot;, //[0][0] head &quot;C oo&quot;, //[0][1] eyes &quot; _( ^)&quot;, //[0][2] mouth &quot; - &quot; //[0][3] legs }, //Monkey 4 { &quot; -4-&quot;, //[0][0] head &quot;C oo&quot;, //[0][1] eyes &quot; _( ^)&quot;, //[0][2] mouth &quot; - &quot; //[0][3] legs }, }; } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loopy&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //this print statement shows current count of Monkeys // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; little monkeys jumping on the bed...&quot;); //finished the rhyme System.out.println(&quot;1 fell off and broke his head&quot;); System.out.println(&quot;mama called the doctor and the docotr said, no more monkeys jumping on the bed&quot;); //how many separate parts are there in a monkey monkey? for (int row = 0; row &lt; monkeyCount; row++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int col = 0; col &lt; monkeys[row].length; col++) { // prints specific part of the monkey from the column System.out.print(monkeys[row][col] + &quot; &quot;); //this is new line between separate parts System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new MonkeyLoop().printPoem(); //a new monkey list and output in one step } } MonkeyLoop.main(null); . Monkey Jumpers Poem in Java Loopy 5 little monkeys jumping on the bed... 1 fell off and broke his head mama called the doctor and the docotr said, no more monkeys jumping on the bed -0- C oo _( ^) - -1- C oo _( ^) - -2- C oo _( ^) - -3- C oo _( ^) - -4- C oo _( ^) - 4 little monkeys jumping on the bed... 1 fell off and broke his head mama called the doctor and the docotr said, no more monkeys jumping on the bed -0- C oo _( ^) - -1- C oo _( ^) - -2- C oo _( ^) - -3- C oo _( ^) - 3 little monkeys jumping on the bed... 1 fell off and broke his head mama called the doctor and the docotr said, no more monkeys jumping on the bed -0- C oo _( ^) - -1- C oo _( ^) - -2- C oo _( ^) - 2 little monkeys jumping on the bed... 1 fell off and broke his head mama called the doctor and the docotr said, no more monkeys jumping on the bed -0- C oo _( ^) - -1- C oo _( ^) - 1 little monkeys jumping on the bed... 1 fell off and broke his head mama called the doctor and the docotr said, no more monkeys jumping on the bed -0- C oo _( ^) - No more monkeys jumping on the bed 0000000000000000000000000000000000 THE END . 2D Array Monkeys Horizontal . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series,featuring Monkey Jumpers */ /** * Class for Monkeys: a 2D array of Monkeys * As well as method to print the Poem */ class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Monkey 0 { &quot; -0-&quot;, //[0][0] head &quot;C oo&quot;, //[0][1] eyes &quot; _( ^)&quot;, //[0][2] mouth &quot; - &quot; //[0][3] legs }, //Monkey 1 { &quot; -1-&quot;, //[0][0] head &quot;C oo&quot;, //[0][1] eyes &quot; _( ^)&quot;, //[0][2] mouth &quot; - &quot; //[0][3] legs }, //Monkey 2 { &quot; -2-&quot;, //[0][0] head &quot;C oo&quot;, //[0][1] eyes &quot; _( ^)&quot;, //[0][2] mouth &quot; - &quot; //[0][3] legs }, //Monkey 3 { &quot; -3-&quot;, //[0][0] head &quot;C oo&quot;, //[0][1] eyes &quot; _( ^)&quot;, //[0][2] mouth &quot; - &quot; //[0][3] legs }, //Monkey 4 { &quot; -4-&quot;, //[0][0] head &quot;C oo&quot;, //[0][1] eyes &quot; _( ^)&quot;, //[0][2] mouth &quot; - &quot; //[0][3] legs }, }; } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loopy&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //this print statement shows current count of Monkeys // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; little monkeys jumping on the bed...&quot;); //finished the rhyme System.out.println(&quot;1 fell off and broke his head&quot;); System.out.println(&quot;mama called the doctor and the docotr said, no more monkeys jumping on the bed&quot;); //Loop through column then row to print out the monkeys horizontally for (int col = 0; col &lt; 4; col++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int row = 0; row &lt; monkeyCount; row++) { // prints specific part of the monkey from the column System.out.print(&quot; &quot; + monkeys[row][col] + &quot; &quot;); //this is new line between separate parts //System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new MonkeyLoop().printPoem(); //a new monkey list and output in one step } } MonkeyLoop.main(null); . Monkey Jumpers Poem in Java Loopy 5 little monkeys jumping on the bed... 1 fell off and broke his head mama called the doctor and the docotr said, no more monkeys jumping on the bed -0- -1- -2- -3- -4- C oo C oo C oo C oo C oo _( ^) _( ^) _( ^) _( ^) _( ^) - - - - - 4 little monkeys jumping on the bed... 1 fell off and broke his head mama called the doctor and the docotr said, no more monkeys jumping on the bed -0- -1- -2- -3- C oo C oo C oo C oo _( ^) _( ^) _( ^) _( ^) - - - - 3 little monkeys jumping on the bed... 1 fell off and broke his head mama called the doctor and the docotr said, no more monkeys jumping on the bed -0- -1- -2- C oo C oo C oo _( ^) _( ^) _( ^) - - - 2 little monkeys jumping on the bed... 1 fell off and broke his head mama called the doctor and the docotr said, no more monkeys jumping on the bed -0- -1- C oo C oo _( ^) _( ^) - - 1 little monkeys jumping on the bed... 1 fell off and broke his head mama called the doctor and the docotr said, no more monkeys jumping on the bed -0- C oo _( ^) - No more monkeys jumping on the bed 0000000000000000000000000000000000 THE END . Questions about code . Is this program in more of an Imperative Programming Style or OOP style? Explain. This program is an Imperitive style of programming. Even though the program is in a class, the program is not dependent on classes and objects. Instead, it is heavily dependent on loops, and arrays. This is because only one object is used and the creation of the program is primarily based on the code within one individual method. . Is each Monkey an object? If each monkey was an object, then it would be an OOP style. However, each monkey is a list element, not an object. . Basics of a 2D arrays . two-dimensional (2D) arrays are indexed by two subscripts, one for the row and one for the column | Each element in the 2D array must by the same type | either a primitive type or object type. | you can access the 2D array by using the row index value and column index value: array_name[row_index][column_index]; | .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/09/20/monkeys.html",
            "relUrl": "/2022/09/20/monkeys.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Basics of a 2D Array",
            "content": "int[][] intArray; double[][] doubleArray; String[][] stringArray; boolean[][] booleanArray; // creating a 2D array with different data types . int[][] arr = { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 }}; System.out.println(&quot;arr[0][0] = &quot; + arr[0][0]); . arr[0][0] = 1 . Looping through Horizontally vs. Vertically . System.out.println(&quot;row count:&quot; + arr.length); for (int i = 0; i &lt; arr.length; i++) { // Loop through all elements of current ROW for (int j = 0; j &lt; arr[i].length; j++) System.out.print(arr[i][j] + &quot; &quot;); } for (int i = 0; i&lt;4; i++) { for (int j = 0; j&lt;2; j++){ System.out.println(arr[i][j]); } } . row count:4 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/09/20/basics_of_2d_array.html",
            "relUrl": "/2022/09/20/basics_of_2d_array.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Agile Methodology Vocab",
            "content": "Scrum Master: The scrum master helps to facilitate the sprint by ensuring that an agile framework is followed. He/she is committed to tracking issues and maintaining scrum boards, but should also remain flexible and open to opportunities for the team to improve their workflow. DevOps: DevOps is the combination of cultural philosophies, practices, and tools that increases an team’s ability to deliver applications and services at high velocity: version control, integration, managing dependencies, POM file management, AWS deployment are some of the key functions that impact velocity. Development Team: The development team can be comprised of all kinds of people including designers, writers, presenters, developers, etc. Two key roles in Web Development are … Frontend Developer: A front-end developer builds the front-end portion of websites and web applications—that is, the part that users actually see and interact with. Backend Developer: Back-end developers a build and maintain the mechanisms that process data and perform actions like data storage, security, and other server-side functions that you cannot see. . Issues are placed in columns on a Scrum Board (Kanban) to represent progress. The below columns have been successful in our academic environment. . To do/backlog | In progress | Complete | Deployed | Done | .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/09/19/agile_vocab.html",
            "relUrl": "/markdown/2022/09/19/agile_vocab.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "2019 APCSA FRQ Question 1",
            "content": "Write the static method numberOfLeapYears, which returns the number of leap years between year1 and year2, inclusive. In order to calculate this value, a helper method is provided for you. • isLeapYear(year) returns true if year is a leap year and false otherwise. Complete method numberOfLeapYears below. You must use isLeapYear appropriately to receive full credit. /** Returns the number of leap years between year1 and year2, inclusive. . Precondition: 0 &lt;= year1 &lt;= year2 */ public static int numberOfLeapYears(int year1, int year2) | . public class AP_calender { // return true if year is a leap year, aand false if not public static void isLeapYear(year){ if (year == 366){ return true; } } public static int numberOfLeapYears(int year1, int year2) { int diff = year2 - year1; int counter = 0; for (int i = 0; i &lt; diff; i++) { if (isLeapYear(i)){ counter = counter + 1; } } } } . Write the static method dayOfWeek, which returns the integer value representing the day of the week for the given date (month, day, year), where 0 denotes Sunday, 1 denotes Monday, ..., and 6 denotes Saturday. For example, 2019 began on a Tuesday, and January 5 is the fifth day of 2019. As a result, January 5, 2019, fell on a Saturday, and the method call dayOfWeek(1, 5, 2019) returns 6. As another example, January 10 is the tenth day of 2019. As a result, January 10, 2019, fell on a Thursday, and the method call dayOfWeek(1, 10, 2019) returns 4. In order to calculate this value, two helper methods are provided for you. • firstDayOfYear(year) returns the integer value representing the day of the week for the first day of year, where 0 denotes Sunday, 1 denotes Monday, ..., and 6 denotes Saturday. For example, since 2019 began on a Tuesday, firstDayOfYear(2019) returns 2. • dayOfYear(month, day, year) returns n, where month, day, and year specify the nth day of the year. For the first day of the year, January 1 (month = 1, day = 1), the value 1 is returned. This method accounts for whether year is a leap year. For example, dayOfYear(3, 1, 2017) returns 60, since 2017 is not a leap year, while dayOfYear(3, 1, 2016) returns 61, since 2016 is a leap year. . public static int dayOfWeek(int month, int day, int year){ int startDay = firstDayOfYear(year); int nthDay = dayOfYear(month, day, year); int returnDay = (startDay + nthDay - 1) % 7; // do MOD 7 because there are 7 days in the week, and we add the remainder return returnDay; } .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/09/14/cb_frq.html",
            "relUrl": "/2022/09/14/cb_frq.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Focus / Habits",
            "content": "Goals/Ambitions . We are constantly setting goals in our lives from the minute we were born. It is said that when you write or speak about your goals and ambitions, you are more likely to achieve them. Many individuals have tested this theory and it turned out to be true. Goals are something that you set for yourself to keep moving forward in life. They help you look up to something and give you a purpose in life. It is said to be good to have goals because it will help you build a successful life. Sometimes, people tend to fail goals they set for themselves and give up entirely. Instead, we should look at our failures as an opportunity to learn and move forward to not make that same mistake again. This kind of attitude will get you very far. Sometimes, you need to lose something in order to win something. Ambitious individuals and big dreamers. These are the individuals that dream of taking over the entire world by themselves, dominating it, and making everything go their way. . Gratitude . Your home. There’s no place like home. . | Your parents. They gave you life and a way to see the world. . | Your friends. Friends that feel like family can’t be beat. . | Your kid(s). If you have them, you know they bring incredible joy to life. . | Your relationship. Your person to spend life with. . | Your pet. Animals are incredible sources of love. . | Your health. It is said that…health is the crown that sits on the well man’s head that only the sick man can see. . | Sight. Your ability to see the beauty in this world. . | Smell. That first sniff of fresh baked anything. . | Taste. What would the world be like if you couldn’t taste anything? . | Touch. An essential part of how we connect with others. . | Food: If you don’t have to worry about where your next meal is coming from, you’re blessed. . | Travel. Seeing other places whenever we want is a gift. . | The kindness of others. When someone reaches out to you in love and support it is no small thing. . | Heating and cooling. Climate control makes our lives WAY easier. . | Living in a safe neighborhood. Not worrying about the safety of yourself and your family is something we take for granted. . | Our freedoms and rights. Saying what you want, practicing your religion in your own way, and voting are not commonplace everywhere. . | Sunshine. It boosts your spirits and makes Earth a beautiful (and livable) place. . | Modern medicine. Keeping us alive for much longer. . | Planet Earth. It’s pretty incredible that it has just the right conditions for us to live here. . | Education. Not everyone gets the access or quality of education we have. . | Clothing. Having plenty of clean clothes that are functional. . | Electricity. Light at the click of a switch. How awesome! . | Clean water. If you don’t have to worry about what you’re drinking, you are lucky. . | A stable government. I recently spoke to someone who lived in a country without one. And I’ve never been more grateful to live where I live. . |",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/09/11/harvard_vid.html",
            "relUrl": "/markdown/2022/09/11/harvard_vid.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "If-Else Statements and DeMorgan's Law",
            "content": "Below is the test run if all the conditions are true . Scanner input = new Scanner(System.in); // Create a Scanner object System.out.println(&quot;Enter something&quot;); String something = input.nextLine(); // Read user input System.out.println(something); boolean period = false; if (something.contains(&quot;.&quot;)){ period = true; } boolean a = false; if (something.contains(&quot;a&quot;)){ a = true; } boolean b = false; if (something.contains(&quot;b&quot;)){ b = true; } boolean five_plus = false; if(something.length() &gt;= 5){ five_plus = true; //something has 5 or more letters // checking an inequality System.out.println(&quot;something has 5 or more letters&quot;); } else{ //something does not contain more than 5 letters. System.out.print(&quot;something does not contain more than 5 letters. &quot;); } if(five_plus &amp;&amp; !period ){ //something has more than 5 letters AND doesn&#39;t contain a period //and operator and de morgan&#39;s law System.out.println(&quot;something has more than 5 letters AND doesn&#39;t contain a period&quot;); } else{ //something has less than 5 letters. cannot say for sure if it has a period System.out.println(&quot;something has less than 5 letters. cannot say for sure if it has a period&quot;); } if(a || b ){ // something contains the letter a OR contains the letter b // or operator System.out.println(&quot;something contains the letter a OR contains the letter b&quot;); } else{ System.out.println(&quot;something doesn&#39;t contain the letter a OR contain the letter b&quot;); } if ((five_plus &amp;&amp; !period) &amp;&amp; (a || b)) { //something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b // combination of and and or operators System.out.println(&quot;something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b&quot;); } else{ //something has less that 5 letters. cannot say for sure if something contains a or b or a period System.out.println(&quot;something has less that 5 letters. cannot say for sure if something contains a or b or a period&quot;); } if (! ((!five_plus || b) || (a &amp;&amp; period) )) { //DeMorgan&#39;s law with and and or operators //De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period. System.out.println(&quot;De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period.&quot;); } else{ //De Morgan&#39;s law with code, if it doesn&#39;t work System.out.println(&quot;De Morgan&#39;s law with code, if it doesn&#39;t work&quot;); } . Enter something aadya something has 5 or more letters something has more than 5 letters AND doesn&#39;t contain a period something contains the letter a OR contains the letter b something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period. . Below is the test run if all the conditions are false . Scanner input = new Scanner(System.in); // Create a Scanner object System.out.println(&quot;Enter something&quot;); String something = input.nextLine(); // Read user input System.out.println(something); boolean period = false; if (something.contains(&quot;.&quot;)){ period = true; } boolean a = false; if (something.contains(&quot;a&quot;)){ a = true; } boolean b = false; if (something.contains(&quot;b&quot;)){ b = true; } boolean five_plus = false; if(something.length() &gt;= 5){ five_plus = true; //something has 5 or more letters // checking an inequality System.out.println(&quot;something has 5 or more letters&quot;); } else{ //something does not contain more than 5 letters. System.out.print(&quot;something does not contain more than 5 letters. &quot;); } if(five_plus &amp;&amp; !period ){ //something has more than 5 letters AND doesn&#39;t contain a period //and operator and de morgan&#39;s law System.out.println(&quot;something has more than 5 letters AND doesn&#39;t contain a period&quot;); } else{ //something has less than 5 letters. cannot say for sure if it has a period System.out.println(&quot;something has less than 5 letters. cannot say for sure if it has a period&quot;); } if(a || b ){ // something contains the letter a OR contains the letter b // or operator System.out.println(&quot;something contains the letter a OR contains the letter b&quot;); } else{ System.out.println(&quot;something doesn&#39;t contain the letter a OR contain the letter b&quot;); } if ((five_plus &amp;&amp; !period) &amp;&amp; (a || b)) { //something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b // combination of and and or operators System.out.println(&quot;something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b&quot;); } else{ //something has less that 5 letters. cannot say for sure if something contains a or b or a period System.out.println(&quot;something has less that 5 letters. cannot say for sure if something contains a or b or a period&quot;); } if (! ((!five_plus || b) || (a &amp;&amp; period) )) { //DeMorgan&#39;s law with and and or operators //De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period. System.out.println(&quot;De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period.&quot;); } else{ //De Morgan&#39;s law with code, if it doesn&#39;t work System.out.println(&quot;De Morgan&#39;s law with code, if it doesn&#39;t work&quot;); } . Enter something mort something does not contain more than 5 letters. something has less than 5 letters. cannot say for sure if it has a period something doesn&#39;t contain the letter a OR contain the letter b something has less that 5 letters. cannot say for sure if something contains a or b or a period De Morgan&#39;s law with code, if it doesn&#39;t work . Case by Case Basis . Below is the test run if all the odd numbered cases are true . Scanner input = new Scanner(System.in); // Create a Scanner object System.out.println(&quot;Enter something&quot;); String something = input.nextLine(); // Read user input System.out.println(something); boolean period = false; if (something.contains(&quot;.&quot;)){ period = true; } boolean a = false; if (something.contains(&quot;a&quot;)){ a = true; } boolean b = false; if (something.contains(&quot;b&quot;)){ b = true; } boolean five_plus = false; Integer cases = 0; if(something.length() &gt;= 5){ five_plus = true; cases = 1; } else{ cases =2; } switch (cases) { case 1: System.out.println(&quot;something has 5 or more letters&quot;); break; case 2: System.out.print(&quot;something does not contain more than 5 letters. &quot;); break; } if(five_plus &amp;&amp; !period ){ cases = 3; } else{ cases = 4; } switch (cases){ case 3: System.out.println(&quot;something has more than 5 letters AND doesn&#39;t contain a period&quot;); break; case 4: System.out.println(&quot;something has less than 5 letters. cannot say for sure if it has a period&quot;); break; } if(a || b ){ cases = 5; } else{ cases = 6; } switch (cases){ case 5: System.out.println(&quot;something contains the letter a OR contains the letter b&quot;); break; case 6: System.out.println(&quot;something doesn&#39;t contain the letter a OR contain the letter b&quot;); break; } if ((five_plus &amp;&amp; !period) &amp;&amp; (a || b)) { cases = 7; } else{ cases = 8; } switch (cases){ case 7: System.out.println(&quot;something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b&quot;); break; case 8: System.out.println(&quot;something has less that 5 letters. cannot say for sure if something contains a or b or a period&quot;); break; } if (! ((!five_plus || b) || (a &amp;&amp; period) )) { //DeMorgan&#39;s law cases = 9; } else{ cases = 10; } switch (cases) { case 9: System.out.println(&quot;De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period.&quot;); break; case 10: System.out.println(&quot;De Morgan&#39;s law with code, if it doesn&#39;t work&quot;); break; } . Enter something aadya something has 5 or more letters something has more than 5 letters AND doesn&#39;t contain a period something contains the letter a OR contains the letter b something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period. . Below is the test run if all the even numbered cases are true . Scanner input = new Scanner(System.in); // Create a Scanner object System.out.println(&quot;Enter something&quot;); String something = input.nextLine(); // Read user input System.out.println(something); boolean period = false; if (something.contains(&quot;.&quot;)){ period = true; } boolean a = false; if (something.contains(&quot;a&quot;)){ a = true; } boolean b = false; if (something.contains(&quot;b&quot;)){ b = true; } boolean five_plus = false; Integer cases = 0; if(something.length() &gt;= 5){ five_plus = true; cases = 1; } else{ cases =2; } switch (cases) { case 1: System.out.println(&quot;something has 5 or more letters&quot;); break; case 2: System.out.print(&quot;something does not contain more than 5 letters. &quot;); break; } if(five_plus &amp;&amp; !period ){ cases = 3; } else{ cases = 4; } switch (cases){ case 3: System.out.println(&quot;something has more than 5 letters AND doesn&#39;t contain a period&quot;); break; case 4: System.out.println(&quot;something has less than 5 letters. cannot say for sure if it has a period&quot;); break; } if(a || b ){ cases = 5; } else{ cases = 6; } switch (cases){ case 5: System.out.println(&quot;something contains the letter a OR contains the letter b&quot;); break; case 6: System.out.println(&quot;something doesn&#39;t contain the letter a OR contain the letter b&quot;); break; } if ((five_plus &amp;&amp; !period) &amp;&amp; (a || b)) { cases = 7; } else{ cases = 8; } switch (cases){ case 7: System.out.println(&quot;something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b&quot;); break; case 8: System.out.println(&quot;something has less that 5 letters. cannot say for sure if something contains a or b or a period&quot;); break; } if (! ((!five_plus || b) || (a &amp;&amp; period) )) { //DeMorgan&#39;s law cases = 9; } else{ cases = 10; } switch (cases) { case 9: System.out.println(&quot;De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period.&quot;); break; case 10: System.out.println(&quot;De Morgan&#39;s law with code, if it doesn&#39;t work&quot;); break; } . Enter something mort something does not contain more than 5 letters. something has less than 5 letters. cannot say for sure if it has a period something doesn&#39;t contain the letter a OR contain the letter b something has less that 5 letters. cannot say for sure if something contains a or b or a period De Morgan&#39;s law with code, if it doesn&#39;t work .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/09/07/if_lab.html",
            "relUrl": "/2022/09/07/if_lab.html",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Alumni Panel Notes",
            "content": "Colin . UCSD, took csp twice | How did you realize you wanted to do CS | Realized he was good at CS. Friends encouraged him, but also choose to appeal to his own skill | Starting cs was the hardest part; keeping motivated through it | Mech engineering: only 1 hands on project in freshman year, and one in senior year | Learn scrum well, as it will come back in college | Put together your resume early | . Anthony . took csp then csa | Did CS from a young age | Liked it as an individual | Biggest challenge: biggest egos, so focus on yourself | just apply, and go ahead and do it. you will never regret it | . Andrew . some UC school | Took CSP, and slowly developed his skills | More paper stuff in college; more about the theory | Being prepared for learn, and struggle in the classes you take in college | What we are learning now is very applicable, and CSA and CSP is what will take you far | Always work on what you want to do. Find time and do it. | Data visualization is something to look into | . Mabel . aerospace engineering | Did not like CS at all, but them grew to like it | Find motivation to keep going, and not give up | Got extremely frustrated with the syntax, but the logic is even harder to learn | There will be more than 200+ people, so it will be a lot of self-learning/studying with peers | This class is very structured compared to colleges, and how their classes are organized | CSA and CSP teaches a lot of problem solving, which is applicable in many different majors in college | Jupyter notebook is a useful tool, as many people in college use that tool for projects | CS in any college is the same, you learn the same things | . Allison . UCLA, only took csp, cognitive science major | More focused on psychology | Csp helped learn web design skills | Temptation to not put effort into what you are doing, make sure you don’t take the shortcuts | CS will show up in almost every single field, such as phycology | . Nitya . UCSD, took csa, likes the experience | Was interested in cs from a young age | Liked making games when she was younger | Getting started into a new area of computer science. There won’t be a lot of structure for everything | .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/08/29/alumni_panel.html",
            "relUrl": "/markdown/2022/08/29/alumni_panel.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Bash Shell Scripting - tools have been installed correctly!",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSA # change APCSA to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSA.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/aadya/vscode exists. Directory /home/aadya/vscode/APCSA does not exists... cloning https://github.com/nighthawkcoders/APCSA.git Cloning into &#39;APCSA&#39;... remote: Enumerating objects: 8951, done. remote: Counting objects: 100% (428/428), done. remote: Compressing objects: 100% (206/206), done. remote: Total 8951 (delta 248), reused 380 (delta 213), pack-reused 8523 Receiving objects: 100% (8951/8951), 14.50 MiB | 1.78 MiB/s, done. Resolving deltas: 100% (5022/5022), done. Directory /home/aadya/vscode/APCSA exists. . lis (ls) . ls is used to list all the directories in the main directory. ls -a is used to list all the hidden files . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags cd /home/aadya/vscode/APCSA_indiv_repo_tri1/ echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned /home/aadya list top level or root of files with project pulled from github APCSA ijava-1.3.0.zip Anaconda3-2022.05-Linux-x86_64.sh install.py Anaconda3-2022.05-Linux-x86_64.sh.1 java Anaconda3-2022.05-Linux-x86_64.sh.2 junk Anaconda3-2022.05-Linux-x86_64.sh.3 vscode anaconda3 list again with hidden files pulled from github . .landscape .wget-hsts .. .lesshst APCSA .bash_history .local Anaconda3-2022.05-Linux-x86_64.sh .bash_logout .m2 Anaconda3-2022.05-Linux-x86_64.sh.1 .bashrc .motd_shown Anaconda3-2022.05-Linux-x86_64.sh.2 .cache .node-gyp Anaconda3-2022.05-Linux-x86_64.sh.3 .conda .npm anaconda3 .config .profile ijava-1.3.0.zip .dbus .sudo_as_admin_successful install.py .gitconfig .vim java .ipython .viminfo junk .jupyter .vscode-server vscode bash: cd: /home/aadya/vscode/APCSA_indiv_repo_tri1/: No such file or directory list all files in long format total 2702080 drwxr-xr-x 20 aadya aadya 4096 Aug 23 08:50 . drwxr-xr-x 3 root root 4096 Aug 18 22:39 .. -rw- 1 aadya aadya 15229 Aug 26 00:22 .bash_history -rw-r--r-- 1 aadya aadya 220 Aug 18 22:39 .bash_logout -rw-r--r-- 1 aadya aadya 4246 Aug 19 09:38 .bashrc drwxr-xr-x 7 aadya aadya 4096 Aug 23 08:50 .cache drwxr-xr-x 2 aadya aadya 4096 Aug 19 09:23 .conda drwxr-xr-x 3 aadya aadya 4096 Aug 23 08:50 .config drwx 3 aadya aadya 4096 Aug 20 17:56 .dbus -rw-r--r-- 1 aadya aadya 56 Aug 18 22:51 .gitconfig drwxr-xr-x 3 aadya aadya 4096 Aug 20 18:46 .ipython drwxr-xr-x 2 aadya aadya 4096 Aug 20 11:29 .jupyter drwxr-xr-x 2 aadya aadya 4096 Aug 18 22:39 .landscape -rw- 1 aadya aadya 28 Aug 20 18:35 .lesshst drwxr-xr-x 5 aadya aadya 4096 Aug 20 18:46 .local drwxr-xr-x 3 aadya aadya 4096 Aug 21 21:48 .m2 -rw-r--r-- 1 aadya aadya 0 Aug 26 08:36 .motd_shown drwxr-xr-x 3 aadya aadya 4096 Aug 20 11:30 .node-gyp drwxr-xr-x 13 aadya aadya 4096 Aug 20 16:27 .npm -rw-r--r-- 1 aadya aadya 807 Aug 18 22:39 .profile -rw-r--r-- 1 aadya aadya 0 Aug 18 22:44 .sudo_as_admin_successful drwxr-xr-x 2 aadya aadya 4096 Aug 21 19:39 .vim -rw- 1 aadya aadya 805 Aug 21 19:39 .viminfo drwxr-xr-x 5 aadya aadya 4096 Aug 18 23:03 .vscode-server -rw-r--r-- 1 aadya aadya 218 Aug 20 18:58 .wget-hsts drwxr-xr-x 17 aadya aadya 4096 Aug 23 08:46 APCSA -rwxr-xr-x 1 aadya aadya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh -rw-r--r-- 1 aadya aadya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.1 -rw-r--r-- 1 aadya aadya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.2 -rw-r--r-- 1 aadya aadya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.3 drwxr-xr-x 28 aadya aadya 4096 Aug 20 11:29 anaconda3 -rw-r--r-- 1 aadya aadya 3366077 Dec 6 2021 ijava-1.3.0.zip -rw-r--r-- 1 aadya aadya 7471 May 5 2019 install.py drwxr-xr-x 3 aadya aadya 4096 May 5 2019 java drwxr-xr-x 4 aadya aadya 4096 Aug 21 20:08 junk drwxr-xr-x 20 aadya aadya 4096 Aug 25 23:11 vscode . all the posts appear . ls -l does this function, as cd is set to the posts folder . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory cd /home/aadya/vscode/APCSA_indiv_repo_tri1/_posts ls -l # list posts . Look for posts bash: cd: /_posts: No such file or directory /home/aadya/vscode/apcsa_indiv_repo_tri1/_notebooks bash: cd: /home/aadya/vscode/APCSA_indiv_repo_tri1/_posts: No such file or directory total 3144 -rw-r--r-- 1 aadya aadya 3162470 Aug 21 19:36 2020-02-20-test.ipynb -rw-r--r-- 1 aadya aadya 888 Aug 24 10:16 2022-08-20-java.ipynb -rw-r--r-- 1 aadya aadya 941 Aug 23 22:26 2022-08-20-python.ipynb -rw-r--r-- 1 aadya aadya 4288 Aug 25 22:57 2022-08-24-score_calculator.ipynb -rw-r--r-- 1 aadya aadya 23435 Aug 25 23:18 2022-08-25-bash_kernel.ipynb -rw-r--r-- 1 aadya aadya 771 Aug 21 19:36 README.md drwxr-xr-x 2 aadya aadya 4096 Aug 21 19:36 ghtop_images drwxr-xr-x 2 aadya aadya 4096 Aug 21 19:36 my_icons . All the notebook files appear . ls -l does this function, as cd is set to the notebooks folder . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory cd /home/aadya/vscode/APCSA_indiv_repo_tri1/_notebooks ls -l # list notebooks . Look for notebooks bash: cd: /_notebooks: No such file or directory /home/aadya/vscode/apcsa_indiv_repo_tri1/_notebooks bash: cd: /home/aadya/vscode/APCSA_indiv_repo_tri1/_notebooks: No such file or directory total 3144 -rw-r--r-- 1 aadya aadya 3162470 Aug 21 19:36 2020-02-20-test.ipynb -rw-r--r-- 1 aadya aadya 888 Aug 24 10:16 2022-08-20-java.ipynb -rw-r--r-- 1 aadya aadya 941 Aug 23 22:26 2022-08-20-python.ipynb -rw-r--r-- 1 aadya aadya 4288 Aug 25 22:57 2022-08-24-score_calculator.ipynb -rw-r--r-- 1 aadya aadya 23435 Aug 25 23:18 2022-08-25-bash_kernel.ipynb -rw-r--r-- 1 aadya aadya 771 Aug 21 19:36 README.md drwxr-xr-x 2 aadya aadya 4096 Aug 21 19:36 ghtop_images drwxr-xr-x 2 aadya aadya 4096 Aug 21 19:36 my_icons . This returns the contents in the read me file . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown cd /home/aadya/vscode/APCSA_indiv_repo_tri1/README.md echo &quot;&quot; echo &quot;end of README.md&quot; . Navigate to project, then navigate to area wwhere files were cloned show the contents of README.md cat: README.md: No such file or directory bash: cd: /home/aadya/vscode/APCSA_indiv_repo_tri1/README.md: No such file or directory end of README.md . env . env command is for the enviroment. It returns all the environments that have been set up. We can check whether all the required environments have been set. . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . Show the shell environment variables, key on left of equal value on right SHELL=/bin/bash PYTHONUNBUFFERED=1 project=/home/aadya/vscode/APCSA CONDA_EXE=/home/aadya/anaconda3/bin/conda _CE_M= WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=Code PWD=/home/aadya/vscode/APCSA LOGNAME=aadya CONDA_PREFIX=/home/aadya/anaconda3 MOTD_SHOWN=update-motd project_dir=/home/aadya/vscode HOME=/home/aadya LANG=C.UTF-8 WSL_INTEROP=/run/WSL/8_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: WAYLAND_DISPLAY=wayland-0 CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/home/aadya/vscode/APCSA/_posts LESSCLOSE=/usr/bin/lesspipe %s %s VSCODE_HANDLES_SIGPIPE=true TERM=xterm-256color _CE_CONDA= LESSOPEN=| /usr/bin/lesspipe %s USER=aadya PYTHONIOENCODING=utf-8 notebooks=/home/aadya/vscode/APCSA/_notebooks CONDA_SHLVL=1 DISPLAY=:0 SHLVL=2 PAGER=cat project_repo=https://github.com/nighthawkcoders/APCSA.git VSCODE_CWD=/mnt/c/Aadya CONDA_PYTHON_EXE=/home/aadya/anaconda3/bin/python XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir PS1=[PEXP [ ]ECT_PROMPT&gt; CONDA_DEFAULT_ENV=base WSLENV=ELECTRON_RUN_AS_NODE/w: VSCODE_WSL_EXT_LOCATION=/mnt/c/Users/prash/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3 XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop PATH=/home/aadya/.vscode-server/bin/e4503b30fc78200f846c62cf8091b76ff5547662/bin/remote-cli:/home/aadya/.local/bin:/home/aadya/anaconda3/bin:/home/aadya/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0:/mnt/c/WINDOWS/System32/OpenSSH:/mnt/c/Users/prash/AppData/Local/Microsoft/WindowsApps:/mnt/c/Aadya/bin:/snap/bin VSCODE_NLS_CONFIG={&#34;locale&#34;:&#34;en&#34;,&#34;availableLanguages&#34;:{}} HOSTTYPE=x86_64 PULSE_SERVER=/mnt/wslg/PulseServer VSCODE_HANDLES_UNCAUGHT_ERRORS=true OLDPWD=/home/aadya/vscode/APCSA/_notebooks VSCODE_IPC_HOOK_CLI=/mnt/wslg/runtime-dir/vscode-ipc-d123d553-5453-4217-b8bb-4bfec6326687.sock _=/usr/bin/env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . show the secrets of .git total 60 -rw-r--r-- 1 aadya aadya 23 Aug 25 23:11 HEAD drwxr-xr-x 2 aadya aadya 4096 Aug 25 23:11 branches -rw-r--r-- 1 aadya aadya 269 Aug 25 23:11 config -rw-r--r-- 1 aadya aadya 73 Aug 25 23:11 description drwxr-xr-x 2 aadya aadya 4096 Aug 25 23:11 hooks -rw-r--r-- 1 aadya aadya 20422 Aug 25 23:11 index drwxr-xr-x 2 aadya aadya 4096 Aug 25 23:11 info drwxr-xr-x 3 aadya aadya 4096 Aug 25 23:11 logs drwxr-xr-x 4 aadya aadya 4096 Aug 25 23:11 objects -rw-r--r-- 1 aadya aadya 271 Aug 25 23:11 packed-refs drwxr-xr-x 5 aadya aadya 4096 Aug 25 23:11 refs look at config file [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true [remote &#34;origin&#34;] url = https://github.com/nighthawkcoders/APCSA.git fetch = +refs/heads/*:refs/remotes/origin/* [branch &#34;master&#34;] remote = origin merge = refs/heads/master .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/08/25/bash_kernel.html",
            "relUrl": "/2022/08/25/bash_kernel.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Basic Primitive and Wrapper Classes Usage",
            "content": "int a = 1; float b = 2.45f; float sum = (a + b); System.out.println(sum); . 3.45 . String x = &quot;aadya&quot;; String y = &quot;daita&quot;; String name = x + &quot; &quot; + y; System.out.println(name); . aadya daita . boolean is_taking_CSA = true; boolean is_taking_CSP = false; if (is_taking_CSP){ System.out.println(&quot;aadya is taking CSP&quot;); } else if (is_taking_CSA){ System.out.println(&quot;aadya is taking CSA&quot;); } . aadya is taking CSA . Score Calculator - (in calculus) . import java.util.Scanner; import static java.lang.Math try { Scanner numerator = new Scanner(System.in); // creating a scanner object String score_text = &quot;enter the score you got&quot;; //usage of string to print a message System.out.println(score_text); // score they got is a float, because the points recieved could be fractional float score = Integer.parseInt(numerator.nextLine()); // read user input System.out.println(score); Scanner denominator = new Scanner(System.in); // creating another scanner object String out_off_text = &quot;enter what the score is out off&quot;; //usage of strings again System.out.println(out_off_text); int out_off = Integer.parseInt(denominator.nextLine()); // out off is an int - something is out off is typically a whole # System.out.println(out_off); float temp_score = (score / out_off); float final_score = temp_score * 100f; //divide the two numbers, and multiple by a 100 - in float form bc score/out_off // could be fractional System.out.println(final_score + &quot;%&quot;); // print the percentage as a float boolean passed = false; //using boolean to see if you have passed the class if (final_score &gt; 68.0){ passed = true; System.out.println(&quot;You passed: &quot; + passed); } else { System.out.println(&quot;You passed: &quot; + passed); } } catch (Exception e) { //TODO: handle exception } . enter the score you got 7.0 enter what the score is out off 10 70.0% You passed: true .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/08/24/score_calculator.html",
            "relUrl": "/2022/08/24/score_calculator.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Primitives and Wrapper Classes Data Types",
            "content": "Java . When you write code in java. | Then, there are two parts to the compiler: the first part turns the code into bytecode. | Then, the second part makes the code suitable for any type of processor/computer. | . Data Types . Primitives: built in data types, and do not need to declare a class to use them | Wrapper classes are non-primitive data types: you do need to declare data types For college board, String is a primitive data type | In regular Java, Strings are Non-primitive data type. | Wrapper classes are capitalized, and primitives are not. | . | Wrapper classes have method, since you are declaring them | python is a weak programming language, since we don’t have to specifically declare data types. | However, java is a strong data type, since we have to specifically declare data types. | .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/08/22/primitives.html",
            "relUrl": "/markdown/2022/08/22/primitives.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Markdown",
            "content": "Markdown . This is an example of a markdown page! . Lists . Here’s a list: . butterflies | rainbows | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/08/21/Markdown.html",
            "relUrl": "/markdown/2022/08/21/Markdown.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Python Usage",
            "content": "print(&quot;hello&quot;) . hello .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/08/20/python.html",
            "relUrl": "/2022/08/20/python.html",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Java Usage",
            "content": "System.out.println(&quot;hello&quot;) . hello .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/08/20/java.html",
            "relUrl": "/2022/08/20/java.html",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post18": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "Notes",
          "content": "College Board . Topic College Board Unit Notes Usage . Unit 1 | Primitives and Wrapper Classes Notes | Primitives and Wrapper Classes Code | . Unit 2 | | | . Code.org Vocab . Unit Notes . Unit 1 - Basics of Objects Oriented Programming | OOP Notes | . PBL Lessons . Topic Notes . Markdown | Markdown Files | . Bash &amp; Checks | Bash and Shell Script Notes | . Alumni | Alumni Notes | .",
          "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Random stuff I can write about",
          "content": "Books . &lt;h3&gt;book list &lt;/h3&gt; . Harry Potter | Series of unfortunate events | GERONIMO STILTON | divergent series | hunger games | percy jackson | emotions | the Prince | . Summer . On June 23, I flew to Jacksonville, Florida with my aunt. We went from San Diego to Houston. From there, we flew straight to Jacksonville. The next day, we went to pick up my cousin from college which is about two hours away, in Gainesville. Unfortunately, she had gotten Covid-19 due to her trip to Disney World a few weeks ago. The first few days of vacation were quite boring because of this. However, they had two beautiful cats, Juno and Max who kept me company. Juno was seven years old and Max was only a year old. My aunt had fostered Max when he was just a few weeks old. Max had severe ringworm. He eventually recovered and my aunt decided to adopt him. In a week, my cousin had recovered and very quickly we started going out. We drove for a few hours. We went to the new Jurassic World movie and then explored a huge outdoor mall they had called “Town Center”. A couple weeks later, we decided to foster a week old kitten. The first night was a huge struggle since we had no idea what we were doing. Slowly we got the hang of it. The three of us kept taking shifts every three hours in the night. My cousin and I went roller skating one day, it was so much fun. She used to roller blade as a kid so she got the hang of it very easily. However, for me, it took multiple falls to finally get a little bit of balance. Later, we went to M-Shack for lunch. We had burgers and french fries. Then, we spotted a hair salon close by. We then got our hair done and went back home with a new, fresh look. A week later, my cousin and I went to Gainesville and lived in her dorm for two days. There, we explored her college campus and went bowling. The next day, we went back to Jacksonville. On July 29, the three of us drove to Orlando and stayed in a hotel there overnight. The next day my aunt and I went to the airport and it was time for me to go back. .",
          "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/random/",
          "relUrl": "/random/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}