{
  
    
        "post0": {
            "title": "Unit 6 Notes",
            "content": "Primitive data - int, double, float Non primitive - String, Integer, class . In java, you need to declare and initialize, like shown: example: int[] int = new int[10] . Errors: Accessing values where the element does not exist. . Traverse an Array . can use any type of loop to go through an array, and also to go in everse. | . Developigng Algorigthms using Arrays: . array_name.length gives the length of the array | array_name[i] accesses the ith element of the array | . .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/11/08/unit_6Notes.html",
            "relUrl": "/markdown/2022/11/08/unit_6Notes.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Unit 5 Notes",
            "content": "Void method . Methods define the behaviors for all objects of a class and consist of a set of instructions for executing the behavior. Void methods don’t return anything. Example: . Void method with parameters These are methods that take in some parameter, or input but doesn’t return anything . Overloading: Having multiple methods with the same name, but different parameters. . Non-Void methods . The value that is returned from a method, you need to specify the type that is being returned in the method signature. Let’s say you return something to main, main now has access to that returned value. Remember, return does not mean print. You would need to specifically say print the return value if you want it to be displayed. .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/11/08/unit_5Notes.html",
            "relUrl": "/markdown/2022/11/08/unit_5Notes.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Unit 4 Notes",
            "content": "Loops . Loops to reduce the code | Writing code, and making it faster, instead of writing a tedious amount of code. . | While loop: while something is true, keeps repeating the segment inside it. Once it is no longer true, the loop exists. . | For Loop: will repeat the loop for a certain amount of time. . | Recursion Loop: instead of any conditional, you repeat the code with a loop by calling on the function itself. . | Nested iteration: technique; loops within loops. May be used to loop through a 2D array. | . . Null . If we create an object and set it to null, without using any “new” keywords or referencing any constructor, it will quite literally be set to nothing. It is still taking up storage in memory but it will not contain anything. . | It creates a reference to an object that takes up memory but is not exactly an object. . | If you run a method on this object, since it is null, it isn’t an object, and it wouldn’t have any methods or constructors. So, if you run a method on it, it will return NullPointerExecption. . | .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/11/08/unit_4Notes.html",
            "relUrl": "/markdown/2022/11/08/unit_4Notes.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Unit 3 Notes",
            "content": "Casting and Ranges of Variables . That number is 23^2 | The negative one is one larger because 0 is included. . | Integers can be represented from -2^31 through (2^31-1) which would be 2^32 numbers total. We do minus one on the last number because 0 is included. . | Integer.MAX_VALUE and Integer.MIN_VALUE are in the Integer class. . | If you were to do the max number plus one, java will return the min value. Same with the min, if you did min number minus one, java will return the max number. This is because it is looping through a circle. This is an overflow error. | . . Instantiation . Basically when you create a class, you have to create the variables, which are the class attributes. And then in constructors, you set the value of those variables (attributes) to something. So you define them. . | Below are three different constructors. The first one has no formal parameters because it is just a basic default employee. When you make an object using this, the values will be all the default values. The second two can be used to create actual employees with personalized data: . | . .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/11/08/unit_3Notes.html",
            "relUrl": "/markdown/2022/11/08/unit_3Notes.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Unit 2 Notes",
            "content": "Classes and Objects . A class is a blueprint for creating objects with the same behavior and defined attributes | An object is a specific entity made from a class that you can manipulate in your programs | Objects are instances of classes with variables used to name them | Each object has behaviors and attributes that are defined by the class that was used to create it. | Each object is individual, changing one object doesn’t affect the others | . Contructors Constructors - initialize the attributes for an object . Constructors start with public, and have the same name as the class. In this case, these constructors are for the class Person. . | The stuff in red is the formal parameters are creating the variables . | When creating an object, you would have to define those constructors - actual parameters: . | . . We can have more than one constructor for an object. This is called overloading the constructor. . . The no-argument constructor has no parameters and sets the instance variables for the object to default values. This will set the constructor to whatever the default value is for that data type. . Can have something like this. This is an example of multiple constructors: .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/11/08/unit_2Notes.html",
            "relUrl": "/markdown/2022/11/08/unit_2Notes.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "College Board MC Reflection",
            "content": "35/40 . Question 29 . A - Incorrect. This will print all the consecutive values from 1 to 25. This will output the same number of values but the values will not be the same. . | B - Incorrect. This will print the values 1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65, 69, 73, 77, 81, 85, 89, 93, and 97. This will output the same number of values but the values will not be the same. . | c - Incorrect. This prints the remainder of each value from 1 to 100 when divided by 4. It will print 1 % 4, which is 1, then 2 % 4, which is 2, then 3 % 4, which is 3, then 4 % 4, which is 0, then it will repeat this pattern printing 1, 2, 3, 0 until k is greater than 100. . | D - Incorrect. This will print 4, 16, 64, since k is assigned the value of k * 4 for each iteration. . | E - Correct. The original code segment prints all values between 1 and 100 that are evenly divisible by 4. The following values are printed: 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, and 100. Choice E shows these values can also be printed by having a for loop that has a loop control variable k that starts at 4, increments by 4, and terminates when k is greater than 100. . | . Question 24 . A - Incorrect. This would be the correct answer if the algorithm filled newArray in row major order instead of column major order. Since the algorithm fills newArray in column major, the value 3 is at newArray[2][0]. The first index represents the row and the second represents the column. . | B - Incorrect. The row and column indices for 2D arrays start at 0. The value 4 is at newArray[0][1]. . | C - Incorrect. The value 5 is at newArray[1][1]. . | D - Correct. The enhanced for loop iterates over the array oldArray. In the first iteration, newArray[0][0] is assigned the value 1. The value of row is incremented to 1. Since 1 % 3 does not equal 0, the statements in the if are not executed. In the next iteration, newArray[1][0] is assigned the value 2. The value of row is incremented to 2. The algorithm continues to fill column 0 with the subsequent values of oldArray. Once row is 3, the if condition is true and row is assigned 0 and col is incremented to 1. The algorithm proceeds to fill column 1. When the for loop terminates, newArray contains the following values { {1, 4, 7}, {2, 5, 8}, {3, 6, 9} }. The value of newArray[0][2] is 7. . | E - Incorrect. The row and column indices for 2D arrays start at 0. The value 8 is at newArray[1][2]. . | . Question 19 . A - Incorrect. The opposite of greater than is less than or equal. Therefore, the opposite of (b &gt; 7) is (b &lt;= 7). . | B - Correct. De Morgan’s Law states that !(p &amp;&amp; q) is equivalent to !p |   | !q. By applying De Morgan’s Law to this expression, we negate the first expression !(!(a !=b)) and the second expression !(b &gt;7) to form !(!(a != b)) |   | !(b &gt; 7). In the first expression the two consecutive not operators (!) cancel each other out giving us (a != b). In the second expression, the opposite of &gt; is &lt;= giving us (b &lt;= 7). The equivalent expression is (a != b) |   | (b &lt;= 7). | . | C - Incorrect. The opposite of !(a != b) is just (a != b). . | D - Incorrect. When you apply De Morgan’s Law the logic operator and (&amp;&amp;) becomes an or ( |   | ) and vice versa. | . | E - Incorrect. The opposite of !(a != b) is just (a != b). When you apply De Morgan’s Law the logic operator and (&amp;&amp;) becomes an or ( |   | ) and vice versa. The opposite of (b &gt; 7) is (b &lt;= 7). | . | . . Question 14 . A - Incorrect. The scope of variable j is in the first for loop since j is declared in the loop header. Once the first for loop has terminated, the variable j no longer exists. . | B - Incorrect. Using the value of k will mean that some or all of the elements from a1 will not be in result as they will be replaced with a2 values. In the first for loop, result[0] was assigned a1[0]. In the second loop, when k has the value 0, result[0] will be assigned a2[0]. . | C - Incorrect. The value of result[a1.length – 1] was assigned a1[a1.length – 1] in the first loop. In the first iteration of the second loop when k is 0, result[a1.length – 1] will be assigned a2[0], meaning the value of a1[a1.length – 1] will not be in result. . | D - Correct. In the first for loop, all the values from a1 are copied over to result at corresponding indices. At this point, the elements at index 0 through a1.length – 1 are full. The first index where the first element of a2 should be copied into is a1.length. We can use the loop control variable k to access all the elements in a2 and k + a1.length to access the corresponding elements in result. . | E - Incorrect. This will cause the value of result[a1.length] to remain 0,the default initial value for elements in an array of type int. Additionally, when k has the value a2.length – 1, the program will attempt to access the element result[a2.length – 1 + a1.length + 1] or result[a2.length + a1.length] and an ArrayIndexOutOfBoundsException will be thrown. . | . Question 4 . A - Incorrect. This would be the result if the boolean condition evaluated to true, such as if it was(x &lt; 10) |   | (y &lt; 0). | . | B - Incorrect. This would be the result if the division used was floating point division, instead of integer division. This would be the case if either x or y were of type double instead of type int or if either value was typecast as a double in the expression. . | C - Correct. When we evaluate the express(x &lt; 10) &amp;&amp; (y &lt; 0) for x having the value 7 and y having the value 3, x &lt; 10 evaluates to true, since 7 is less than 10, and y &lt; 0 evaluates to false, since 3 is not less than 0. The logic operator &amp;&amp; evaluates to true when both conditions are true and evaluates to false otherwise. Since the second condition is false, the boolean expression is false. As a result, the compiler will skip the first output statement and execute the statement in the else. The expression x / y is integer division for 7 / 3, which is 2. . | D - Incorrect. This would be the result if the expression x / y was y / x instead. . | E - Incorrect. This would be the result if the expression x / y was x % y instead. | .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/11/08/cb_quiz_reflection.html",
            "relUrl": "/markdown/2022/11/08/cb_quiz_reflection.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Unit 1 Code.org Vocab",
            "content": "Object Oriented Programming Basic Vocab . attribute - a characteristic of an object . | behavior - an action that an object can perform . | class - a programmer-defined blueprint from which objects are created . | constructor - a block of code that has the same name as the class and tells the computer how to create a new object . | debugging - finding and fixing problems in an algorithm or program . | instantiate - to call the constructor to create an object . | object - an instance of a class . | object-oriented programming - an approach to creating and using models of physical or imagined objects . | state - the attributes of an object that are represented by its instance variables . | constructor signature - the first line of the constructor which includes the public keyword, the constructor name, and the values to specify when an object is created . | inheritance - an object-oriented programming principle where a subclass inherits the attributes and behaviors of a superclass . | subclass - a class that extends a superclass and inherits its attributes and behaviors . | superclass - a class that can be extended to create subclasses . | method signature - consists of a name and parameter list . | Method Decomposition - the process of breaking a problem down into smaller parts to write methods for each part . | edge case - a bug that occurs at the highest or lowest end of a range of possible values or in extreme situations . | redundant code - code that is unnecessary . | inheritance hierarchy - where a class serves as a superclass for more than one subclass . | . . .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/11/08/Unit-1-Code.org-Vocab.html",
            "relUrl": "/2022/11/08/Unit-1-Code.org-Vocab.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Unit 6 Application FRQ",
            "content": "public class ArrayMethods { private int[] values = {1,2,3,4,5,6,7,8,9,10}; public int void swap(){ int first; int last; int length = (values.length - 1); first = values[0]; last = values[length]; values[0] = last; values[length] = first; } } ArrayMethods.swap(null); . | public int void swap(){ &lt;identifier&gt; expected .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/10/25/Unit6.html",
            "relUrl": "/2022/10/25/Unit6.html",
            "date": " • Oct 25, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "BASE Clothes",
            "content": "BASE Clothes ![](/apcsa_indiv_repo_tri1/images/teamlogo.png &quot;https://github.com/fastai/fastpages&quot;) You can translate the content of this page by selecting a language in the select box. . &lt;/body&gt; &lt;/html&gt; . Skip to Content ↵ENTER Skip to Menu ↵ENTER Skip to Footer ↵ENTER Skip to content . . . . Search . . . SIGN IN | JUST IN . | BASICS TANKS . | T-SHIRTS . | BOTTOMS . | . | CLOTHING VIEW ALL . | SWEATPANTS &amp; SWEATSHIRTS . | SWEATERS COTTON | CARDIGANS | WOOL | . | TOPS . | BOTTOMS JEANS | PANTS | SHORTS &amp; SKIRTS | . | JACKETS . | CARGO . | STRIPES . | MATCHING SETS . | INTIMATES . | DRESSES . | . | GRAPHICS VIEW ALL . | GRAPHICS SWEATS . | GRAPHICS TEES . | . | ACCESSORIES VIEW ALL . | JEWELRY . | BAGS &amp; BACKPACKS . | BELTS . | HAIR ACCESSORIES . | SOCKS . | HATS &amp; CAPS . | . | GIFT CARDS . | OLIVE OIL . | CUSTOMER SERVICE | LOCATIONS | FOR CA RESIDENTS | . . . Instagram | . . MORE COUNTRIES . . . Search . SIGN IN Service menu CUSTOMER SERVICE | LOCATIONS | FOR CA RESIDENTS | . . . Cart . JUST IN | BASICS TANKS | T-SHIRTS | BOTTOMS | . | CLOTHING VIEW ALL | SWEATPANTS &amp; SWEATSHIRTS | SWEATERS . COTTON | CARDIGANS | WOOL | . | TOPS | BOTTOMS . JEANS | PANTS | SHORTS &amp; SKIRTS | . | JACKETS | CARGO | STRIPES | MATCHING SETS | INTIMATES | DRESSES | . | GRAPHICS VIEW ALL | GRAPHICS SWEATS | GRAPHICS TEES | . | ACCESSORIES VIEW ALL | JEWELRY | BAGS &amp; BACKPACKS | BELTS | HAIR ACCESSORIES | SOCKS | HATS &amp; CAPS | . | GIFT CARDS | OLIVE OIL | . . . Item added to your cart . CHECKOUT Continue shopping CLOTHING . Griffin Shorts Griffin Shorts Regular price $16 Regular price Sale price $16 Unit price / &nbsp;per&nbsp; | Phoebe Skirt Phoebe Skirt Regular price $20 Regular price Sale price $20 Unit price / &nbsp;per&nbsp; | Kaylee Dark Wash Denim Jacket Kaylee Dark Wash Denim Jacket Regular price $48 Regular price Sale price $48 Unit price / &nbsp;per&nbsp; | Leah Thin Stripe Top Leah Thin Stripe Top Regular price $22 Regular price Sale price $22 Unit price / &nbsp;per&nbsp; | Crystal Hoodie Crystal Hoodie Regular price $28 Regular price Sale price $28 Unit price / &nbsp;per&nbsp; . | Blythe Crop Tank Blythe Crop Tank Regular price $16 Regular price Sale price $16 Unit price / &nbsp;per&nbsp; | Amber Cotton Cardigan Amber Cotton Cardigan Regular price $40 Regular price Sale price $40 Unit price / &nbsp;per&nbsp; | Ahern Floral Thermal Top Ahern Floral Thermal Top Regular price $24 Regular price Sale price $24 Unit price / &nbsp;per&nbsp; | McKenna Eyelet Top McKenna Eyelet Top Regular price $18 Regular price Sale price $18 Unit price / &nbsp;per&nbsp; | Jillian Basic Top Jillian Basic Top Regular price $18 Regular price Sale price $18 Unit price / &nbsp;per&nbsp; | Hailie Basic Top Hailie Basic Top Regular price $18 Regular price Sale price $18 Unit price / &nbsp;per&nbsp; | Wynn Basic Top Wynn Basic Top Regular price $20 Regular price Sale price $20 Unit price / &nbsp;per&nbsp; | Beverly Cargo Mini Skirt Beverly Cargo Mini Skirt Regular price $32 Regular price Sale price $32 Unit price / &nbsp;per&nbsp; | Christy Hoodie Christy Hoodie Regular price $42 Regular price Sale price $42 Unit price / &nbsp;per&nbsp; | Kim Cargo Pants Kim Cargo Pants Regular price $48 Regular price Sale price $48 Unit price / &nbsp;per&nbsp; | Jillian Basic Top Jillian Basic Top Regular price $18 Regular price Sale price $18 Unit price / &nbsp;per&nbsp; | Beyonca Crop Tank Beyonca Crop Tank Regular price $16 Regular price Sale price $16 Unit price / &nbsp;per&nbsp; . | Anastasia Sweatpants Anastasia Sweatpants Regular price $35 Regular price Sale price $35 Unit price / &nbsp;per&nbsp; . | Eva Heavy Wool Cable Knit Cardigan Eva Heavy Wool Cable Knit Cardigan Regular price $48 Regular price Sale price $48 Unit price / &nbsp;per&nbsp; | Ashley Cotton Top Ashley Cotton Top Regular price $18 Regular price Sale price $18 Unit price / &nbsp;per&nbsp; . | . SHOPPING BAG . Order Today and Expect your Delivery by: . October 30, 2022 - November 2, 2022 . Subtotal: $0.00 Estimated Total: $0.00 CHECKOUT YOUR SHOPPING BAG IS EMPTY . For CA Residents | © 2022, Brandy Melville Choosing a selection results in a full page refresh. | . . . English Accessibility Adjustments Reset Settings Statement Hide Interface Choose the right accessibility profile for you OFF ON Seizure Safe Profile Clear flashes &amp; reduces color This profile enables epileptic and seizure prone users to browse safely by eliminating the risk of seizures that result from flashing or blinking animations and risky color combinations. OFF ON Vision Impaired Profile Enhances website&#39;s visuals This profile adjusts the website, so that it is accessible to the majority of visual impairments such as Degrading Eyesight, Tunnel Vision, Cataract, Glaucoma, and others. OFF ON ADHD Friendly Profile More focus &amp; fewer distractions This profile significantly reduces distractions, to help people with ADHD and Neurodevelopmental disorders browse, read, and focus on the essential elements of the website more easily. OFF ON Cognitive Disability Profile Assists with reading &amp; focusing This profile provides various assistive features to help users with cognitive disabilities such as Autism, Dyslexia, CVA, and others, to focus on the essential elements of the website more easily. OFF ON Keyboard Navigation (Motor) Use website with the keyboard This profile enables motor-impaired persons to operate the website using the keyboard Tab, Shift+Tab, and the Enter keys. Users can also use shortcuts such as “M” (menus), “H” (headings), “F” (forms), “B” (buttons), and “G” (graphics) to jump to specific elements.Note: This profile prompts automatically for keyboard users. OFF ON Blind Users (Screen Reader) Optimize website for screen-readers This profile adjusts the website to be compatible with screen-readers such as JAWS, NVDA, VoiceOver, and TalkBack. A screen-reader is software that is installed on the blind user’s computer and smartphone, and websites should ensure compatibility with it. Note: This profile prompts automatically to screen-readers. Content Adjustments Content Scaling Default Readable Font Highlight Titles Highlight Links Text Magnifier Adjust Font Sizing Default Align Center Align Left Adjust Line Height Default Adjust Letter Spacing Default Align Right Color Adjustments Dark Contrast Light Contrast High Contrast High Saturation Adjust Text Colors Cancel Monochrome Low Saturation Adjust Title Colors Cancel Adjust Background Colors Cancel Orientation Adjustments Mute Sounds Hide Images Read Mode Reading Guide Useful Links Select an option Home Header Footer Main Content Stop Animations Reading Mask Highlight Hover Highlight Focus Big Black Cursor Big White Cursor HIDDEN_ADJUSTMENTS Keyboard Navigation Accessible Mode Screen Reader Adjustments Read Mode Web Accessibility By Learn More Choose the Interface Language English Español Deutsch Português Français Italiano עברית 繁體中文 Pусский عربى عربى Nederlands 繁體中文 日本語 Polski Türk Accessibility StatementCompliance status We firmly believe that the internet should be available and accessible to anyone and are committed to providing a website that is accessible to the broadest possible audience, regardless of ability. . To fulfill this, we aim to adhere as strictly as possible to the World Wide Web Consortium’s (W3C) Web Content Accessibility Guidelines 2.1 (WCAG 2.1) at the AA level. These guidelines explain how to make web content accessible to people with a wide array of disabilities. Complying with those guidelines helps us ensure that the website is accessible to blind people, people with motor impairments, visual impairment, cognitive disabilities, and more. . This website utilizes various technologies that are meant to make it as accessible as possible at all times. We utilize an accessibility interface that allows persons with specific disabilities to adjust the website’s UI (user interface) and design it to their personal needs. . Additionally, the website utilizes an AI-based application that runs in the background and optimizes its accessibility level constantly. This application remediates the website’s HTML, adapts its functionality and behavior for screen-readers used by blind users, and for keyboard functions used by individuals with motor impairments. . If you wish to contact the website’s owner please use the website&#39;s form . Screen-reader and keyboard navigation Our website implements the ARIA attributes (Accessible Rich Internet Applications) technique, alongside various behavioral changes, to ensure blind users visiting with screen-readers can read, comprehend, and enjoy the website’s functions. As soon as a user with a screen-reader enters your site, they immediately receive a prompt to enter the Screen-Reader Profile so they can browse and operate your site effectively. Here’s how our website covers some of the most important screen-reader requirements: . Screen-reader optimization:&nbsp;we run a process that learns the website’s components from top to bottom, to ensure ongoing compliance even when updating the website. In this process, we provide screen-readers with meaningful data using the ARIA set of attributes. For example, we provide accurate form labels; descriptions for actionable icons (social media icons, search icons, cart icons, etc.); validation guidance for form inputs; element roles such as buttons, menus, modal dialogues (popups), and others.&nbsp;Additionally, the background process scans all of the website’s images. It provides an accurate and meaningful image-object-recognition-based description as an ALT (alternate text) tag for images that are not described. It will also extract texts embedded within the image using an OCR (optical character recognition) technology. To turn on screen-reader adjustments at any time, users need only to press the Alt+1 keyboard combination. Screen-reader users also get automatic announcements to turn the Screen-reader mode on as soon as they enter the website.These adjustments are compatible with popular screen readers such as JAWS, NVDA, VoiceOver, and TalkBack. | Keyboard navigation optimization:&nbsp;The background process also adjusts the website’s HTML and adds various behaviors using JavaScript code to make the website operable by the keyboard. This includes the ability to navigate the website using the Tab and Shift+Tab keys, operate dropdowns with the arrow keys, close them with Esc, trigger buttons and links using the Enter key, navigate between radio and checkbox elements using the arrow keys, and fill them in with the Spacebar or Enter key.Additionally, keyboard users will find content-skip menus available at any time by clicking Alt+2, or as the first element of the site while navigating with the keyboard. The background process also handles triggered popups by moving the keyboard focus towards them as soon as they appear, not allowing the focus to drift outside.Users can also use shortcuts such as “M” (menus), “H” (headings), “F” (forms), “B” (buttons), and “G” (graphics) to jump to specific elements. | Disability profiles supported on our website Epilepsy Safe Profile: this profile enables people with epilepsy to safely use the website by eliminating the risk of seizures resulting from flashing or blinking animations and risky color combinations. | Vision Impaired Profile: this profile adjusts the website so that it is accessible to the majority of visual impairments such as Degrading Eyesight, Tunnel Vision, Cataract, Glaucoma, and others. | Cognitive Disability Profile: this profile provides various assistive features to help users with cognitive disabilities such as Autism, Dyslexia, CVA, and others, to focus on the essential elements more easily. | ADHD Friendly Profile: this profile significantly reduces distractions and noise to help people with ADHD, and Neurodevelopmental disorders browse, read, and focus on the essential elements more easily. | Blind Users Profile (Screen-readers): this profile adjusts the website to be compatible with screen-readers such as JAWS, NVDA, VoiceOver, and TalkBack. A screen-reader is installed on the blind user’s computer, and this site is compatible with it. | Keyboard Navigation Profile (Motor-Impaired): this profile enables motor-impaired persons to operate the website using the keyboard Tab, Shift+Tab, and the Enter keys. Users can also use shortcuts such as “M” (menus), “H” (headings), “F” (forms), “B” (buttons), and “G” (graphics) to jump to specific elements. | . Additional UI, design, and readability adjustments Font&nbsp;adjustments –&nbsp;users can increase and decrease its size, change its family (type), adjust the spacing,&nbsp;alignment, line height,&nbsp;and more. | Color&nbsp;adjustments –&nbsp;users can select various color contrast profiles such as light, dark, inverted, and monochrome. Additionally, users can swap color schemes of titles, texts, and backgrounds with over seven different coloring options. | Animations –&nbsp;epileptic users can stop all running animations with the click of a button. Animations controlled by the interface include videos, GIFs, and CSS flashing transitions. | Content&nbsp;highlighting –&nbsp;users can choose to emphasize essential elements such as links and titles. They can also choose to highlight focused or hovered elements only. | Audio muting&nbsp;–&nbsp;users with hearing devices may experience headaches or other issues due to automatic audio playing. This option lets users mute the entire website instantly. | Cognitive&nbsp;disorders –&nbsp;we utilize a search engine linked to Wikipedia and Wiktionary, allowing people with cognitive disorders to decipher meanings of phrases, initials, slang, and others. | Additional functions&nbsp;– we allow users to change cursor color and size, use a printing mode, enable a virtual keyboard, and many other functions. | Assistive technology and browser compatibility We aim to support as many browsers and assistive technologies as possible, so our users can choose the best fitting tools for them, with as few limitations as possible. Therefore, we have worked very hard to be able to support all major systems that comprise over 95% of the user market share, including Google Chrome, Mozilla Firefox, Apple Safari, Opera and Microsoft Edge, JAWS, and NVDA (screen readers), both for Windows and MAC users. . Notes, comments, and feedback Despite our very best efforts to allow anybody to adjust the website to their needs, there may still be pages or sections that are not fully accessible, are in the process of becoming accessible, or are lacking an adequate technological solution to make them accessible. Still, we are continually improving our accessibility, adding, updating, improving its options and features, and developing and adopting new technologies. All this is meant to reach the optimal level of accessibility following technological advancements. If you wish to contact the website’s owner, please use the website&#39;s form . Hide Accessibility Interface? Please note: If you choose to hide the accessibility interface, you won&#39;t be able to see it anymore, unless you clear your browsing history and data. Are you sure that you wish to hide the interface? Accept Cancel Continue Processing the data, please give it a few seconds... .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/10/24/brandy.html",
            "relUrl": "/2022/10/24/brandy.html",
            "date": " • Oct 24, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Unit 3 Application - 2009 3B",
            "content": "int[] rateTable; public int getChargingCost(int chargeTime){ int minimum_cost = 0; int start_time = 0; for (int hour=0; hour&lt;24; hour++) { int total_rate = 0; int curr_hour = hour; for (int i=0; i &lt; chargeTime; i++){ if( (curr_hour + i) &gt; 23) { curr_hour = 0; chargeTime -= i; i = 0; } total_rate += rateTable[curr_hour + i]; } if( (minimum_cost == 0) || (total_rate &lt; minimum_cost) ) { minimum_cost = total_rate; start_time = hour; } } return start_time; } . 2017 FRQ 1B . public class Digits { private ArrayList&lt;Integer&gt; digitList; Integer maximum = digitList[0]; Integer counter = 0; public boolean isStrictlyIncreasing() { for (int i=1; i &lt; len(digitList[]); i++){ if (maximum &lt; digitList[i]){ maximum = digitList[i]; counter = counter +1; } else{ return false; } } return true; } } . 2019 FRQ 3B . public boolean isBalanced(ArrayList&lt;String&gt; delimiters) { int open = 0; int close = 0; for (String d: delimiters) { if (d.equals(openDel)) { open++; } else if (d.equals(closeDel)) { close++; } if (close &gt; open) return false; } return open == close; } .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/10/22/Unit3.html",
            "relUrl": "/2022/10/22/Unit3.html",
            "date": " • Oct 22, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Fetch of Backend Jokes",
            "content": "Joke HaHa Boohoo .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/data/jokes",
            "relUrl": "/data/jokes",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Shirts ArrayList",
            "content": "import java.util.ArrayList; class arraylist { public ArrayList&lt;String&gt; add() { // Size int n = 5; // initial size n ArrayList&lt;String&gt; arrli = new ArrayList&lt;String&gt;(n); // Appending new elements at // the end of the list for (Integer i = 1; i &lt;= n; i++){ String string_i = i.toString(); String shirt = &quot;shirt &quot;; shirt = shirt + string_i; arrli.add(shirt); System.out.println(arrli); } System.out.println(&quot;added all five shirts&quot;); return arrli; } public ArrayList&lt;String&gt; remove(){ // Size int n = 5; // initial size n ArrayList&lt;String&gt; arrli = new ArrayList&lt;String&gt;(n); arrli = add(); for (Integer i=0; i&lt;4; i++){ arrli.remove(0); System.out.println(arrli); } System.out.println(&quot;removed four shirts&quot;); arrli.clear(); System.out.println(arrli); System.out.println(&quot;cleared any remaining shirts&quot;); return arrli; } public static void main(String[] args) { arraylist object_array = new arraylist(); //object_array.add(); object_array.remove(); } } arraylist.main(null); . [shirt 1] [shirt 1, shirt 2] [shirt 1, shirt 2, shirt 3] [shirt 1, shirt 2, shirt 3, shirt 4] [shirt 1, shirt 2, shirt 3, shirt 4, shirt 5] added all five shirts [shirt 2, shirt 3, shirt 4, shirt 5] [shirt 3, shirt 4, shirt 5] [shirt 4, shirt 5] [shirt 5] removed four shirts [] cleared any remaining shirts .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/10/07/arraylisyt.html",
            "relUrl": "/2022/10/07/arraylisyt.html",
            "date": " • Oct 7, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Arrays and Images",
            "content": "import javax.imageio.ImageIO; import java.io.File; import java.io.IOException; import java.awt.image.BufferedImage; public class ImageIOTest { public static void main( String[] args ){ BufferedImage img = null; // buffer type try { // Name of file and directories String name = &quot;MonaLisa&quot;; String in = &quot;images/&quot;; String out = &quot;images/tmp/&quot;; // Either use URL or File for reading image using ImageIO File imageFile = new File(in + name + &quot;.png&quot;); img = ImageIO.read(imageFile); // set buffer of image data // ImageIO Image write to gif in Java // Documentation https://docs.oracle.com/javase/tutorial/2d/images/index.html ImageIO.write(img, &quot;gif&quot;, new File(out + name + &quot;.gif&quot;) ); // write buffer to gif } catch (IOException e) { e.printStackTrace(); } System.out.println(&quot;Success&quot;); } } ImageIOTest.main(null); . javax.imageio.IIOException: Can&#39;t read input file! at java.desktop/javax.imageio.ImageIO.read(ImageIO.java:1308) at REPL.$JShell$16$ImageIOTest.main($JShell$16.java:32) at REPL.$JShell$17.do_it$($JShell$17.java:19) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.base/java.lang.reflect.Method.invoke(Method.java:566) at io.github.spencerpark.ijava.execution.IJavaExecutionControl.lambda$execute$1(IJavaExecutionControl.java:95) at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) at java.base/java.lang.Thread.run(Thread.java:829) . Success . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private final String greyDir = &quot;images/tmp/greyscale/&quot;; private final String redDir = &quot;images/tmp/red/&quot;; private final String blueDir = &quot;images/tmp/blue/&quot;; private final String greenDir = &quot;images/tmp/green/&quot;; private String inFile; private String resizedFile; private String redFile; private String greenFile; private String blueFile; private String greyscaleFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.greyscaleFile = this.greyDir + name + &quot;_grey&quot; + &quot;.&quot; + ext; this.redFile = this.redDir + name + &quot;_red&quot; + &quot;.&quot; + ext; this.blueFile = this.blueDir + name + &quot;_blue&quot; + &quot;.&quot; + ext; this.greenFile = this.greenDir + name + &quot;_green&quot; + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } public void greyscale() { BufferedImage img = null; BufferedImage greyImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data greyImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) (co.getRed() * 0.299); int green = (int) (co.getGreen() * 0.587); int blue = (int) (co.getBlue() * 0.114); int total = red + green + blue; Color newColor = new Color( total, total, total ); greyImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(greyImg), this.ext, new File(greyscaleFile)); } catch (IOException e) { return; } this.inFile = this.greyscaleFile; // use scaled file vs original file in Class this.setStats(); } public void redscale() { BufferedImage img = null; BufferedImage redImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data redImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) co.getRed(); int green = 0; int blue = 0; Color newColor = new Color( red, green, blue); redImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(redImg), this.ext, new File(redFile)); } catch (IOException e) { return; } this.inFile = this.redFile; // use scaled file vs original file in Class this.setStats(); } public void greenscale() { BufferedImage img = null; BufferedImage greenImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data greenImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = 0; int green = (int) co.getGreen(); int blue = 0; Color newColor = new Color( red, green, blue); greenImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(greenImg), this.ext, new File(greenFile)); } catch (IOException e) { return; } this.inFile = this.greenFile; // use scaled file vs original file in Class this.setStats(); } public void bluescale() { BufferedImage img = null; BufferedImage blueImg = null; try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data blueImg = img; // create a new BufferedImage for drawing for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color co = new Color(img.getRGB(j, i)); int red = (int) (co.getRed() * 0.299); int green = (int) (co.getGreen() * 0.587); int blue = (int) (co.getBlue() * 0.114); int total = red + green + blue; Color newColor = new Color(0, 0, total); blueImg.setRGB(j, i, newColor.getRGB()); } } } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(blueImg), this.ext, new File(blueFile)); } catch (IOException e) { return; } this.inFile = this.blueFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { if (i % 2 != 0) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics MonaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); MonaLisa.greyscale(); MonaLisa.redscale(); MonaLisa.greenscale(); MonaLisa.bluescale(); MonaLisa.printStats(&quot;Original&quot;); MonaLisa.resize(33); MonaLisa.printStats(&quot;Scaled&quot;); MonaLisa.convertToAscii(); } } System.out.println(&quot;DONE SUCESSFULLY&quot;); . DONE SUCESSFULLY .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/10/02/arrays_images.html",
            "relUrl": "/2022/10/02/arrays_images.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Dress List JavaScript",
            "content": "function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } // define a function to hold data for a Dress function Dress(brand, color, price) { this.brand = brand; this.color = color; this.price = price; this.fav = &quot;&quot;; } // define a setter for fav in Dress data Dress.prototype.setFav = function(fav) { this.fav = fav; } // define a JSON conversion &quot;method&quot; associated with Person Dress.prototype.toJSON = function() { const obj = {brand: this.brand, color: this.color, price: this.price, fav: this.fav}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } // make a new Person and assign to variable teacher var dress1 = new Dress(&quot;Lucy In the Sky&quot;, &quot;blue&quot;, 55); // object type is easy to work with in JavaScript logItType(dress1); // before role logItType(dress1.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher dress1.setFav(&quot;#1&quot;); // set the role logItType(dress1); logItType(dress1.toJSON()); . object ; Dress { brand: &#39;Lucy In the Sky&#39;, color: &#39;blue&#39;, price: 55, fav: &#39;&#39; } string ; {&#34;brand&#34;:&#34;Lucy In the Sky&#34;,&#34;color&#34;:&#34;blue&#34;,&#34;price&#34;:55,&#34;fav&#34;:&#34;&#34;} object ; Dress { brand: &#39;Lucy In the Sky&#39;, color: &#39;blue&#39;, price: 55, fav: &#39;#1&#39; } string ; {&#34;brand&#34;:&#34;Lucy In the Sky&#34;,&#34;color&#34;:&#34;blue&#34;,&#34;price&#34;:55,&#34;fav&#34;:&#34;#1&#34;} . var dresses = [ new Dress(&quot;Windsor&quot;, &quot;maroon&quot;, 60), new Dress(&quot;Windsor&quot;, &quot;dark green&quot;, 50), new Dress(&quot;Lucy in the Sky&quot;, &quot;white&quot;, 55), new Dress(&quot;Cider&quot;, &quot;black&quot;, 40), ]; // define a classroom and build Classroom objects and json function favorite_list(dress1, dresses){ // 1 teacher, many student dress1.setFav(&quot;Favorite&quot;); this.dress1 = dress1; this.js = [dress1]; this.dresses = dresses; this.dresses.forEach(dresses =&gt; { dresses.setFav(&quot;Backup Options&quot;); this.js.push(dresses); }); this.json = []; this.js.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined dress1 and dresses dress_list = new favorite_list(dress1, dresses); // output of Objects and JSON in CompSci classroom logItType(dress_list.js); // constructed classroom object logItType(dress_list.js[0].brand); // abstract 1st objects name logItType(dress_list.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(dress_list.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Dress { brand: &#39;Lucy In the Sky&#39;, color: &#39;blue&#39;, price: 55, fav: &#39;Favorite&#39; }, Dress { brand: &#39;Windsor&#39;, color: &#39;maroon&#39;, price: 60, fav: &#39;Backup Options&#39; }, Dress { brand: &#39;Windsor&#39;, color: &#39;dark green&#39;, price: 50, fav: &#39;Backup Options&#39; }, Dress { brand: &#39;Lucy in the Sky&#39;, color: &#39;white&#39;, price: 55, fav: &#39;Backup Options&#39; }, Dress { brand: &#39;Cider&#39;, color: &#39;black&#39;, price: 40, fav: &#39;Backup Options&#39; } ] string ; Lucy In the Sky string ; {&#34;brand&#34;:&#34;Lucy In the Sky&#34;,&#34;color&#34;:&#34;blue&#34;,&#34;price&#34;:55,&#34;fav&#34;:&#34;Favorite&#34;} object ; { brand: &#39;Lucy In the Sky&#39;, color: &#39;blue&#39;, price: 55, fav: &#39;Favorite&#39; } . // define an HTML conversion &quot;method&quot; associated with Classroom favorite_list.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Brand&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Color&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Price&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Opinion&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row in dress_list.js) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + dress_list.js[row].brand + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + dress_list.js[row].color + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + dress_list.js[row].price + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + dress_list.js[row].fav + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(dress_list._toHtml()); . BrandColorPriceOpinion . Lucy In the Sky | blue | 55 | Favorite | Windsor | maroon | 60 | Backup Options | Windsor | dark green | 50 | Backup Options | Lucy in the Sky | white | 55 | Backup Options | Cider | black | 40 | Backup Options | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/09/26/js.html",
            "relUrl": "/2022/09/26/js.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Implementation of JavaScript",
            "content": ".",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/09/25/js_html.html",
            "relUrl": "/markdown/2022/09/25/js_html.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Agile Methodology Vocab",
            "content": "Scrum Master: The scrum master helps to facilitate the sprint by ensuring that an agile framework is followed. He/she is committed to tracking issues and maintaining scrum boards, but should also remain flexible and open to opportunities for the team to improve their workflow. DevOps: DevOps is the combination of cultural philosophies, practices, and tools that increases an team’s ability to deliver applications and services at high velocity: version control, integration, managing dependencies, POM file management, AWS deployment are some of the key functions that impact velocity. Development Team: The development team can be comprised of all kinds of people including designers, writers, presenters, developers, etc. Two key roles in Web Development are … Frontend Developer: A front-end developer builds the front-end portion of websites and web applications—that is, the part that users actually see and interact with. Backend Developer: Back-end developers a build and maintain the mechanisms that process data and perform actions like data storage, security, and other server-side functions that you cannot see. . Issues are placed in columns on a Scrum Board (Kanban) to represent progress. The below columns have been successful in our academic environment. . To do/backlog | In progress | Complete | Deployed | Done | .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/09/19/agile_vocab.html",
            "relUrl": "/markdown/2022/09/19/agile_vocab.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "2019 APCSA FRQ Question 1",
            "content": "Write the static method numberOfLeapYears, which returns the number of leap years between year1 and year2, inclusive. In order to calculate this value, a helper method is provided for you. • isLeapYear(year) returns true if year is a leap year and false otherwise. Complete method numberOfLeapYears below. You must use isLeapYear appropriately to receive full credit. /** Returns the number of leap years between year1 and year2, inclusive. . Precondition: 0 &lt;= year1 &lt;= year2 */ public static int numberOfLeapYears(int year1, int year2) | . public class AP_calender { // return true if year is a leap year, aand false if not public static void isLeapYear(year){ if (year == 366){ return true; } } public static int numberOfLeapYears(int year1, int year2) { int diff = year2 - year1; int counter = 0; for (int i = 0; i &lt; diff; i++) { if (isLeapYear(i)){ counter = counter + 1; } } } } . Write the static method dayOfWeek, which returns the integer value representing the day of the week for the given date (month, day, year), where 0 denotes Sunday, 1 denotes Monday, ..., and 6 denotes Saturday. For example, 2019 began on a Tuesday, and January 5 is the fifth day of 2019. As a result, January 5, 2019, fell on a Saturday, and the method call dayOfWeek(1, 5, 2019) returns 6. As another example, January 10 is the tenth day of 2019. As a result, January 10, 2019, fell on a Thursday, and the method call dayOfWeek(1, 10, 2019) returns 4. In order to calculate this value, two helper methods are provided for you. • firstDayOfYear(year) returns the integer value representing the day of the week for the first day of year, where 0 denotes Sunday, 1 denotes Monday, ..., and 6 denotes Saturday. For example, since 2019 began on a Tuesday, firstDayOfYear(2019) returns 2. • dayOfYear(month, day, year) returns n, where month, day, and year specify the nth day of the year. For the first day of the year, January 1 (month = 1, day = 1), the value 1 is returned. This method accounts for whether year is a leap year. For example, dayOfYear(3, 1, 2017) returns 60, since 2017 is not a leap year, while dayOfYear(3, 1, 2016) returns 61, since 2016 is a leap year. . public static int dayOfWeek(int month, int day, int year){ int startDay = firstDayOfYear(year); int nthDay = dayOfYear(month, day, year); int returnDay = (startDay + nthDay - 1) % 7; // do MOD 7 because there are 7 days in the week, and we add the remainder return returnDay; } .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/09/14/cb_frq.html",
            "relUrl": "/2022/09/14/cb_frq.html",
            "date": " • Sep 14, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Focus / Habits",
            "content": "Goals/Ambitions . We are constantly setting goals in our lives from the minute we were born. It is said that when you write or speak about your goals and ambitions, you are more likely to achieve them. Many individuals have tested this theory and it turned out to be true. Goals are something that you set for yourself to keep moving forward in life. They help you look up to something and give you a purpose in life. It is said to be good to have goals because it will help you build a successful life. Sometimes, people tend to fail goals they set for themselves and give up entirely. Instead, we should look at our failures as an opportunity to learn and move forward to not make that same mistake again. This kind of attitude will get you very far. Sometimes, you need to lose something in order to win something. Ambitious individuals and big dreamers. These are the individuals that dream of taking over the entire world by themselves, dominating it, and making everything go their way. . Gratitude . Your home. There’s no place like home. . | Your parents. They gave you life and a way to see the world. . | Your friends. Friends that feel like family can’t be beat. . | Your kid(s). If you have them, you know they bring incredible joy to life. . | Your relationship. Your person to spend life with. . | Your pet. Animals are incredible sources of love. . | Your health. It is said that…health is the crown that sits on the well man’s head that only the sick man can see. . | Sight. Your ability to see the beauty in this world. . | Smell. That first sniff of fresh baked anything. . | Taste. What would the world be like if you couldn’t taste anything? . | Touch. An essential part of how we connect with others. . | Food: If you don’t have to worry about where your next meal is coming from, you’re blessed. . | Travel. Seeing other places whenever we want is a gift. . | The kindness of others. When someone reaches out to you in love and support it is no small thing. . | Heating and cooling. Climate control makes our lives WAY easier. . | Living in a safe neighborhood. Not worrying about the safety of yourself and your family is something we take for granted. . | Our freedoms and rights. Saying what you want, practicing your religion in your own way, and voting are not commonplace everywhere. . | Sunshine. It boosts your spirits and makes Earth a beautiful (and livable) place. . | Modern medicine. Keeping us alive for much longer. . | Planet Earth. It’s pretty incredible that it has just the right conditions for us to live here. . | Education. Not everyone gets the access or quality of education we have. . | Clothing. Having plenty of clean clothes that are functional. . | Electricity. Light at the click of a switch. How awesome! . | Clean water. If you don’t have to worry about what you’re drinking, you are lucky. . | A stable government. I recently spoke to someone who lived in a country without one. And I’ve never been more grateful to live where I live. . |",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/09/11/harvard_vid.html",
            "relUrl": "/markdown/2022/09/11/harvard_vid.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "If-Else Statements and DeMorgan's Law",
            "content": "Below is the test run if all the conditions are true . Scanner input = new Scanner(System.in); // Create a Scanner object System.out.println(&quot;Enter something&quot;); String something = input.nextLine(); // Read user input System.out.println(something); boolean period = false; if (something.contains(&quot;.&quot;)){ period = true; } boolean a = false; if (something.contains(&quot;a&quot;)){ a = true; } boolean b = false; if (something.contains(&quot;b&quot;)){ b = true; } boolean five_plus = false; if(something.length() &gt;= 5){ five_plus = true; //something has 5 or more letters // checking an inequality System.out.println(&quot;something has 5 or more letters&quot;); } else{ //something does not contain more than 5 letters. System.out.print(&quot;something does not contain more than 5 letters. &quot;); } if(five_plus &amp;&amp; !period ){ //something has more than 5 letters AND doesn&#39;t contain a period //and operator and de morgan&#39;s law System.out.println(&quot;something has more than 5 letters AND doesn&#39;t contain a period&quot;); } else{ //something has less than 5 letters. cannot say for sure if it has a period System.out.println(&quot;something has less than 5 letters. cannot say for sure if it has a period&quot;); } if(a || b ){ // something contains the letter a OR contains the letter b // or operator System.out.println(&quot;something contains the letter a OR contains the letter b&quot;); } else{ System.out.println(&quot;something doesn&#39;t contain the letter a OR contain the letter b&quot;); } if ((five_plus &amp;&amp; !period) &amp;&amp; (a || b)) { //something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b // combination of and and or operators System.out.println(&quot;something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b&quot;); } else{ //something has less that 5 letters. cannot say for sure if something contains a or b or a period System.out.println(&quot;something has less that 5 letters. cannot say for sure if something contains a or b or a period&quot;); } if (! ((!five_plus || b) || (a &amp;&amp; period) )) { //DeMorgan&#39;s law with and and or operators //De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period. System.out.println(&quot;De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period.&quot;); } else{ //De Morgan&#39;s law with code, if it doesn&#39;t work System.out.println(&quot;De Morgan&#39;s law with code, if it doesn&#39;t work&quot;); } . Enter something aadya something has 5 or more letters something has more than 5 letters AND doesn&#39;t contain a period something contains the letter a OR contains the letter b something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period. . Below is the test run if all the conditions are false . Scanner input = new Scanner(System.in); // Create a Scanner object System.out.println(&quot;Enter something&quot;); String something = input.nextLine(); // Read user input System.out.println(something); boolean period = false; if (something.contains(&quot;.&quot;)){ period = true; } boolean a = false; if (something.contains(&quot;a&quot;)){ a = true; } boolean b = false; if (something.contains(&quot;b&quot;)){ b = true; } boolean five_plus = false; if(something.length() &gt;= 5){ five_plus = true; //something has 5 or more letters // checking an inequality System.out.println(&quot;something has 5 or more letters&quot;); } else{ //something does not contain more than 5 letters. System.out.print(&quot;something does not contain more than 5 letters. &quot;); } if(five_plus &amp;&amp; !period ){ //something has more than 5 letters AND doesn&#39;t contain a period //and operator and de morgan&#39;s law System.out.println(&quot;something has more than 5 letters AND doesn&#39;t contain a period&quot;); } else{ //something has less than 5 letters. cannot say for sure if it has a period System.out.println(&quot;something has less than 5 letters. cannot say for sure if it has a period&quot;); } if(a || b ){ // something contains the letter a OR contains the letter b // or operator System.out.println(&quot;something contains the letter a OR contains the letter b&quot;); } else{ System.out.println(&quot;something doesn&#39;t contain the letter a OR contain the letter b&quot;); } if ((five_plus &amp;&amp; !period) &amp;&amp; (a || b)) { //something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b // combination of and and or operators System.out.println(&quot;something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b&quot;); } else{ //something has less that 5 letters. cannot say for sure if something contains a or b or a period System.out.println(&quot;something has less that 5 letters. cannot say for sure if something contains a or b or a period&quot;); } if (! ((!five_plus || b) || (a &amp;&amp; period) )) { //DeMorgan&#39;s law with and and or operators //De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period. System.out.println(&quot;De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period.&quot;); } else{ //De Morgan&#39;s law with code, if it doesn&#39;t work System.out.println(&quot;De Morgan&#39;s law with code, if it doesn&#39;t work&quot;); } . Enter something mort something does not contain more than 5 letters. something has less than 5 letters. cannot say for sure if it has a period something doesn&#39;t contain the letter a OR contain the letter b something has less that 5 letters. cannot say for sure if something contains a or b or a period De Morgan&#39;s law with code, if it doesn&#39;t work . Case by Case Basis . Below is the test run if all the odd numbered cases are true . Scanner input = new Scanner(System.in); // Create a Scanner object System.out.println(&quot;Enter something&quot;); String something = input.nextLine(); // Read user input System.out.println(something); boolean period = false; if (something.contains(&quot;.&quot;)){ period = true; } boolean a = false; if (something.contains(&quot;a&quot;)){ a = true; } boolean b = false; if (something.contains(&quot;b&quot;)){ b = true; } boolean five_plus = false; Integer cases = 0; if(something.length() &gt;= 5){ five_plus = true; cases = 1; } else{ cases =2; } switch (cases) { case 1: System.out.println(&quot;something has 5 or more letters&quot;); break; case 2: System.out.print(&quot;something does not contain more than 5 letters. &quot;); break; } if(five_plus &amp;&amp; !period ){ cases = 3; } else{ cases = 4; } switch (cases){ case 3: System.out.println(&quot;something has more than 5 letters AND doesn&#39;t contain a period&quot;); break; case 4: System.out.println(&quot;something has less than 5 letters. cannot say for sure if it has a period&quot;); break; } if(a || b ){ cases = 5; } else{ cases = 6; } switch (cases){ case 5: System.out.println(&quot;something contains the letter a OR contains the letter b&quot;); break; case 6: System.out.println(&quot;something doesn&#39;t contain the letter a OR contain the letter b&quot;); break; } if ((five_plus &amp;&amp; !period) &amp;&amp; (a || b)) { cases = 7; } else{ cases = 8; } switch (cases){ case 7: System.out.println(&quot;something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b&quot;); break; case 8: System.out.println(&quot;something has less that 5 letters. cannot say for sure if something contains a or b or a period&quot;); break; } if (! ((!five_plus || b) || (a &amp;&amp; period) )) { //DeMorgan&#39;s law cases = 9; } else{ cases = 10; } switch (cases) { case 9: System.out.println(&quot;De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period.&quot;); break; case 10: System.out.println(&quot;De Morgan&#39;s law with code, if it doesn&#39;t work&quot;); break; } . Enter something aadya something has 5 or more letters something has more than 5 letters AND doesn&#39;t contain a period something contains the letter a OR contains the letter b something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period. . Below is the test run if all the even numbered cases are true . Scanner input = new Scanner(System.in); // Create a Scanner object System.out.println(&quot;Enter something&quot;); String something = input.nextLine(); // Read user input System.out.println(something); boolean period = false; if (something.contains(&quot;.&quot;)){ period = true; } boolean a = false; if (something.contains(&quot;a&quot;)){ a = true; } boolean b = false; if (something.contains(&quot;b&quot;)){ b = true; } boolean five_plus = false; Integer cases = 0; if(something.length() &gt;= 5){ five_plus = true; cases = 1; } else{ cases =2; } switch (cases) { case 1: System.out.println(&quot;something has 5 or more letters&quot;); break; case 2: System.out.print(&quot;something does not contain more than 5 letters. &quot;); break; } if(five_plus &amp;&amp; !period ){ cases = 3; } else{ cases = 4; } switch (cases){ case 3: System.out.println(&quot;something has more than 5 letters AND doesn&#39;t contain a period&quot;); break; case 4: System.out.println(&quot;something has less than 5 letters. cannot say for sure if it has a period&quot;); break; } if(a || b ){ cases = 5; } else{ cases = 6; } switch (cases){ case 5: System.out.println(&quot;something contains the letter a OR contains the letter b&quot;); break; case 6: System.out.println(&quot;something doesn&#39;t contain the letter a OR contain the letter b&quot;); break; } if ((five_plus &amp;&amp; !period) &amp;&amp; (a || b)) { cases = 7; } else{ cases = 8; } switch (cases){ case 7: System.out.println(&quot;something has more that 5 letters and doesn&#39;t contain a period AND something has either the letter a or the letter b&quot;); break; case 8: System.out.println(&quot;something has less that 5 letters. cannot say for sure if something contains a or b or a period&quot;); break; } if (! ((!five_plus || b) || (a &amp;&amp; period) )) { //DeMorgan&#39;s law cases = 9; } else{ cases = 10; } switch (cases) { case 9: System.out.println(&quot;De Morgan&#39;s law with complex expressions: if something has 5+ letters, and/or doesn&#39;t have a &#39;b&#39; and/or doesn&#39;t have an &#39;a&#39; AND has a period.&quot;); break; case 10: System.out.println(&quot;De Morgan&#39;s law with code, if it doesn&#39;t work&quot;); break; } . Enter something mort something does not contain more than 5 letters. something has less than 5 letters. cannot say for sure if it has a period something doesn&#39;t contain the letter a OR contain the letter b something has less that 5 letters. cannot say for sure if something contains a or b or a period De Morgan&#39;s law with code, if it doesn&#39;t work .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/09/07/if_lab.html",
            "relUrl": "/2022/09/07/if_lab.html",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Alumni Panel Notes",
            "content": "Colin . UCSD, took csp twice | How did you realize you wanted to do CS | Realized he was good at CS. Friends encouraged him, but also choose to appeal to his own skill | Starting cs was the hardest part; keeping motivated through it | Mech engineering: only 1 hands on project in freshman year, and one in senior year | Learn scrum well, as it will come back in college | Put together your resume early | . Anthony . took csp then csa | Did CS from a young age | Liked it as an individual | Biggest challenge: biggest egos, so focus on yourself | just apply, and go ahead and do it. you will never regret it | . Andrew . some UC school | Took CSP, and slowly developed his skills | More paper stuff in college; more about the theory | Being prepared for learn, and struggle in the classes you take in college | What we are learning now is very applicable, and CSA and CSP is what will take you far | Always work on what you want to do. Find time and do it. | Data visualization is something to look into | . Mabel . aerospace engineering | Did not like CS at all, but them grew to like it | Find motivation to keep going, and not give up | Got extremely frustrated with the syntax, but the logic is even harder to learn | There will be more than 200+ people, so it will be a lot of self-learning/studying with peers | This class is very structured compared to colleges, and how their classes are organized | CSA and CSP teaches a lot of problem solving, which is applicable in many different majors in college | Jupyter notebook is a useful tool, as many people in college use that tool for projects | CS in any college is the same, you learn the same things | . Allison . UCLA, only took csp, cognitive science major | More focused on psychology | Csp helped learn web design skills | Temptation to not put effort into what you are doing, make sure you don’t take the shortcuts | CS will show up in almost every single field, such as phycology | . Nitya . UCSD, took csa, likes the experience | Was interested in cs from a young age | Liked making games when she was younger | Getting started into a new area of computer science. There won’t be a lot of structure for everything | .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/08/29/alumni_panel.html",
            "relUrl": "/markdown/2022/08/29/alumni_panel.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Bash Shell Scripting - tools have been installed correctly!",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSA # change APCSA to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSA.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/aadya/vscode exists. Directory /home/aadya/vscode/APCSA does not exists... cloning https://github.com/nighthawkcoders/APCSA.git Cloning into &#39;APCSA&#39;... remote: Enumerating objects: 8951, done. remote: Counting objects: 100% (428/428), done. remote: Compressing objects: 100% (206/206), done. remote: Total 8951 (delta 248), reused 380 (delta 213), pack-reused 8523 Receiving objects: 100% (8951/8951), 14.50 MiB | 1.78 MiB/s, done. Resolving deltas: 100% (5022/5022), done. Directory /home/aadya/vscode/APCSA exists. . lis (ls) . ls is used to list all the directories in the main directory. ls -a is used to list all the hidden files . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags cd /home/aadya/vscode/APCSA_indiv_repo_tri1/ echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned /home/aadya list top level or root of files with project pulled from github APCSA ijava-1.3.0.zip Anaconda3-2022.05-Linux-x86_64.sh install.py Anaconda3-2022.05-Linux-x86_64.sh.1 java Anaconda3-2022.05-Linux-x86_64.sh.2 junk Anaconda3-2022.05-Linux-x86_64.sh.3 vscode anaconda3 list again with hidden files pulled from github . .landscape .wget-hsts .. .lesshst APCSA .bash_history .local Anaconda3-2022.05-Linux-x86_64.sh .bash_logout .m2 Anaconda3-2022.05-Linux-x86_64.sh.1 .bashrc .motd_shown Anaconda3-2022.05-Linux-x86_64.sh.2 .cache .node-gyp Anaconda3-2022.05-Linux-x86_64.sh.3 .conda .npm anaconda3 .config .profile ijava-1.3.0.zip .dbus .sudo_as_admin_successful install.py .gitconfig .vim java .ipython .viminfo junk .jupyter .vscode-server vscode bash: cd: /home/aadya/vscode/APCSA_indiv_repo_tri1/: No such file or directory list all files in long format total 2702080 drwxr-xr-x 20 aadya aadya 4096 Aug 23 08:50 . drwxr-xr-x 3 root root 4096 Aug 18 22:39 .. -rw- 1 aadya aadya 15229 Aug 26 00:22 .bash_history -rw-r--r-- 1 aadya aadya 220 Aug 18 22:39 .bash_logout -rw-r--r-- 1 aadya aadya 4246 Aug 19 09:38 .bashrc drwxr-xr-x 7 aadya aadya 4096 Aug 23 08:50 .cache drwxr-xr-x 2 aadya aadya 4096 Aug 19 09:23 .conda drwxr-xr-x 3 aadya aadya 4096 Aug 23 08:50 .config drwx 3 aadya aadya 4096 Aug 20 17:56 .dbus -rw-r--r-- 1 aadya aadya 56 Aug 18 22:51 .gitconfig drwxr-xr-x 3 aadya aadya 4096 Aug 20 18:46 .ipython drwxr-xr-x 2 aadya aadya 4096 Aug 20 11:29 .jupyter drwxr-xr-x 2 aadya aadya 4096 Aug 18 22:39 .landscape -rw- 1 aadya aadya 28 Aug 20 18:35 .lesshst drwxr-xr-x 5 aadya aadya 4096 Aug 20 18:46 .local drwxr-xr-x 3 aadya aadya 4096 Aug 21 21:48 .m2 -rw-r--r-- 1 aadya aadya 0 Aug 26 08:36 .motd_shown drwxr-xr-x 3 aadya aadya 4096 Aug 20 11:30 .node-gyp drwxr-xr-x 13 aadya aadya 4096 Aug 20 16:27 .npm -rw-r--r-- 1 aadya aadya 807 Aug 18 22:39 .profile -rw-r--r-- 1 aadya aadya 0 Aug 18 22:44 .sudo_as_admin_successful drwxr-xr-x 2 aadya aadya 4096 Aug 21 19:39 .vim -rw- 1 aadya aadya 805 Aug 21 19:39 .viminfo drwxr-xr-x 5 aadya aadya 4096 Aug 18 23:03 .vscode-server -rw-r--r-- 1 aadya aadya 218 Aug 20 18:58 .wget-hsts drwxr-xr-x 17 aadya aadya 4096 Aug 23 08:46 APCSA -rwxr-xr-x 1 aadya aadya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh -rw-r--r-- 1 aadya aadya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.1 -rw-r--r-- 1 aadya aadya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.2 -rw-r--r-- 1 aadya aadya 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.3 drwxr-xr-x 28 aadya aadya 4096 Aug 20 11:29 anaconda3 -rw-r--r-- 1 aadya aadya 3366077 Dec 6 2021 ijava-1.3.0.zip -rw-r--r-- 1 aadya aadya 7471 May 5 2019 install.py drwxr-xr-x 3 aadya aadya 4096 May 5 2019 java drwxr-xr-x 4 aadya aadya 4096 Aug 21 20:08 junk drwxr-xr-x 20 aadya aadya 4096 Aug 25 23:11 vscode . all the posts appear . ls -l does this function, as cd is set to the posts folder . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory cd /home/aadya/vscode/APCSA_indiv_repo_tri1/_posts ls -l # list posts . Look for posts bash: cd: /_posts: No such file or directory /home/aadya/vscode/apcsa_indiv_repo_tri1/_notebooks bash: cd: /home/aadya/vscode/APCSA_indiv_repo_tri1/_posts: No such file or directory total 3144 -rw-r--r-- 1 aadya aadya 3162470 Aug 21 19:36 2020-02-20-test.ipynb -rw-r--r-- 1 aadya aadya 888 Aug 24 10:16 2022-08-20-java.ipynb -rw-r--r-- 1 aadya aadya 941 Aug 23 22:26 2022-08-20-python.ipynb -rw-r--r-- 1 aadya aadya 4288 Aug 25 22:57 2022-08-24-score_calculator.ipynb -rw-r--r-- 1 aadya aadya 23435 Aug 25 23:18 2022-08-25-bash_kernel.ipynb -rw-r--r-- 1 aadya aadya 771 Aug 21 19:36 README.md drwxr-xr-x 2 aadya aadya 4096 Aug 21 19:36 ghtop_images drwxr-xr-x 2 aadya aadya 4096 Aug 21 19:36 my_icons . All the notebook files appear . ls -l does this function, as cd is set to the notebooks folder . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory cd /home/aadya/vscode/APCSA_indiv_repo_tri1/_notebooks ls -l # list notebooks . Look for notebooks bash: cd: /_notebooks: No such file or directory /home/aadya/vscode/apcsa_indiv_repo_tri1/_notebooks bash: cd: /home/aadya/vscode/APCSA_indiv_repo_tri1/_notebooks: No such file or directory total 3144 -rw-r--r-- 1 aadya aadya 3162470 Aug 21 19:36 2020-02-20-test.ipynb -rw-r--r-- 1 aadya aadya 888 Aug 24 10:16 2022-08-20-java.ipynb -rw-r--r-- 1 aadya aadya 941 Aug 23 22:26 2022-08-20-python.ipynb -rw-r--r-- 1 aadya aadya 4288 Aug 25 22:57 2022-08-24-score_calculator.ipynb -rw-r--r-- 1 aadya aadya 23435 Aug 25 23:18 2022-08-25-bash_kernel.ipynb -rw-r--r-- 1 aadya aadya 771 Aug 21 19:36 README.md drwxr-xr-x 2 aadya aadya 4096 Aug 21 19:36 ghtop_images drwxr-xr-x 2 aadya aadya 4096 Aug 21 19:36 my_icons . This returns the contents in the read me file . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown cd /home/aadya/vscode/APCSA_indiv_repo_tri1/README.md echo &quot;&quot; echo &quot;end of README.md&quot; . Navigate to project, then navigate to area wwhere files were cloned show the contents of README.md cat: README.md: No such file or directory bash: cd: /home/aadya/vscode/APCSA_indiv_repo_tri1/README.md: No such file or directory end of README.md . env . env command is for the enviroment. It returns all the environments that have been set up. We can check whether all the required environments have been set. . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . Show the shell environment variables, key on left of equal value on right SHELL=/bin/bash PYTHONUNBUFFERED=1 project=/home/aadya/vscode/APCSA CONDA_EXE=/home/aadya/anaconda3/bin/conda _CE_M= WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=Code PWD=/home/aadya/vscode/APCSA LOGNAME=aadya CONDA_PREFIX=/home/aadya/anaconda3 MOTD_SHOWN=update-motd project_dir=/home/aadya/vscode HOME=/home/aadya LANG=C.UTF-8 WSL_INTEROP=/run/WSL/8_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: WAYLAND_DISPLAY=wayland-0 CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/home/aadya/vscode/APCSA/_posts LESSCLOSE=/usr/bin/lesspipe %s %s VSCODE_HANDLES_SIGPIPE=true TERM=xterm-256color _CE_CONDA= LESSOPEN=| /usr/bin/lesspipe %s USER=aadya PYTHONIOENCODING=utf-8 notebooks=/home/aadya/vscode/APCSA/_notebooks CONDA_SHLVL=1 DISPLAY=:0 SHLVL=2 PAGER=cat project_repo=https://github.com/nighthawkcoders/APCSA.git VSCODE_CWD=/mnt/c/Aadya CONDA_PYTHON_EXE=/home/aadya/anaconda3/bin/python XDG_RUNTIME_DIR=/mnt/wslg/runtime-dir PS1=[PEXP [ ]ECT_PROMPT&gt; CONDA_DEFAULT_ENV=base WSLENV=ELECTRON_RUN_AS_NODE/w: VSCODE_WSL_EXT_LOCATION=/mnt/c/Users/prash/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3 XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop PATH=/home/aadya/.vscode-server/bin/e4503b30fc78200f846c62cf8091b76ff5547662/bin/remote-cli:/home/aadya/.local/bin:/home/aadya/anaconda3/bin:/home/aadya/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0:/mnt/c/WINDOWS/System32/OpenSSH:/mnt/c/Users/prash/AppData/Local/Microsoft/WindowsApps:/mnt/c/Aadya/bin:/snap/bin VSCODE_NLS_CONFIG={&#34;locale&#34;:&#34;en&#34;,&#34;availableLanguages&#34;:{}} HOSTTYPE=x86_64 PULSE_SERVER=/mnt/wslg/PulseServer VSCODE_HANDLES_UNCAUGHT_ERRORS=true OLDPWD=/home/aadya/vscode/APCSA/_notebooks VSCODE_IPC_HOOK_CLI=/mnt/wslg/runtime-dir/vscode-ipc-d123d553-5453-4217-b8bb-4bfec6326687.sock _=/usr/bin/env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . show the secrets of .git total 60 -rw-r--r-- 1 aadya aadya 23 Aug 25 23:11 HEAD drwxr-xr-x 2 aadya aadya 4096 Aug 25 23:11 branches -rw-r--r-- 1 aadya aadya 269 Aug 25 23:11 config -rw-r--r-- 1 aadya aadya 73 Aug 25 23:11 description drwxr-xr-x 2 aadya aadya 4096 Aug 25 23:11 hooks -rw-r--r-- 1 aadya aadya 20422 Aug 25 23:11 index drwxr-xr-x 2 aadya aadya 4096 Aug 25 23:11 info drwxr-xr-x 3 aadya aadya 4096 Aug 25 23:11 logs drwxr-xr-x 4 aadya aadya 4096 Aug 25 23:11 objects -rw-r--r-- 1 aadya aadya 271 Aug 25 23:11 packed-refs drwxr-xr-x 5 aadya aadya 4096 Aug 25 23:11 refs look at config file [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true [remote &#34;origin&#34;] url = https://github.com/nighthawkcoders/APCSA.git fetch = +refs/heads/*:refs/remotes/origin/* [branch &#34;master&#34;] remote = origin merge = refs/heads/master .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/08/25/bash_kernel.html",
            "relUrl": "/2022/08/25/bash_kernel.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Basic Primitive and Wrapper Classes Usage",
            "content": "int a = 1; float b = 2.45f; float sum = (a + b); System.out.println(sum); . 3.45 . String x = &quot;aadya&quot;; String y = &quot;daita&quot;; String name = x + &quot; &quot; + y; System.out.println(name); . aadya daita . boolean is_taking_CSA = true; boolean is_taking_CSP = false; if (is_taking_CSP){ System.out.println(&quot;aadya is taking CSP&quot;); } else if (is_taking_CSA){ System.out.println(&quot;aadya is taking CSA&quot;); } . aadya is taking CSA . Score Calculator - (in calculus) . import java.util.Scanner; import static java.lang.Math try { Scanner numerator = new Scanner(System.in); // creating a scanner object String score_text = &quot;enter the score you got&quot;; //usage of string to print a message System.out.println(score_text); // score they got is a float, because the points recieved could be fractional float score = Integer.parseInt(numerator.nextLine()); // read user input System.out.println(score); Scanner denominator = new Scanner(System.in); // creating another scanner object String out_off_text = &quot;enter what the score is out off&quot;; //usage of strings again System.out.println(out_off_text); int out_off = Integer.parseInt(denominator.nextLine()); // out off is an int - something is out off is typically a whole # System.out.println(out_off); float temp_score = (score / out_off); float final_score = temp_score * 100f; //divide the two numbers, and multiple by a 100 - in float form bc score/out_off // could be fractional System.out.println(final_score + &quot;%&quot;); // print the percentage as a float boolean passed = false; //using boolean to see if you have passed the class if (final_score &gt; 68.0){ passed = true; System.out.println(&quot;You passed: &quot; + passed); } else { System.out.println(&quot;You passed: &quot; + passed); } } catch (Exception e) { //TODO: handle exception } . enter the score you got 7.0 enter what the score is out off 10 70.0% You passed: true .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/2022/08/24/score_calculator.html",
            "relUrl": "/2022/08/24/score_calculator.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Primitives and Wrapper Classes Data Types",
            "content": "Java . When you write code in java. | Then, there are two parts to the compiler: the first part turns the code into bytecode. | Then, the second part makes the code suitable for any type of processor/computer. | . Data Types . Primitives: built in data types, and do not need to declare a class to use them | Wrapper classes are non-primitive data types: you do need to declare data types For college board, String is a primitive data type | In regular Java, Strings are Non-primitive data type. | Wrapper classes are capitalized, and primitives are not. | . | Wrapper classes have method, since you are declaring them | python is a weak programming language, since we don’t have to specifically declare data types. | However, java is a strong data type, since we have to specifically declare data types. | .",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/08/22/primitives.html",
            "relUrl": "/markdown/2022/08/22/primitives.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Markdown",
            "content": "Markdown . This is an example of a markdown page! . Lists . Here’s a list: . butterflies | rainbows | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2022/08/21/Markdown.html",
            "relUrl": "/markdown/2022/08/21/Markdown.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "Notes",
          "content": "College Board . Topic College Board Unit Notes Usage . Unit 1 | Primitives and Wrapper Classes Unit 1 Notes | Primitives and Wrapper Classes Unit 1 Code | . Unit 2 | Unit 2 Notes | Unit 2 Appilication | . Unit 3 | Unit 3 Notes | Unit 3 Appilication | . Unit 4 | Unit 4 Notes | Unit 4 Appilication | . Unit 5 | Unit 5 Notes | Unit 5 Appilication | . Unit 6 | Unit 6 Notes | Unit 6 Appilication | . Unit 1-6 College Board MC | Reflection | Score: 35/40 | . PBL Lessons . Topic Application/Notes . JavaScript with Lists | Producing a JS table with Dress List | . RESTful API | RapidAPI Kohls Shopping API | . Arrays and Images | Mona Lisa Images | . Iteration + 2D arrays | Monkeys Example | . Website frontend | Brandy Melville Site Example | . Frontend to Backend API | Mr. Mort&#39;s Jokes API | . Github | GitHub Planning | . Markdown | Markdown Files | . Bash &amp; Checks | Bash and Shell Script Notes | . Alumni | Alumni Notes | . Code.org Vocab . Unit Notes . Basics of Objects Oriented Programming | OOP Notes | .",
          "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Random stuff I can write about",
          "content": "Books . &lt;h3&gt;book list &lt;/h3&gt; . Harry Potter | Series of unfortunate events | GERONIMO STILTON | divergent series | hunger games | percy jackson | emotions | the Prince | . Summer . On June 23, I flew to Jacksonville, Florida with my aunt. We went from San Diego to Houston. From there, we flew straight to Jacksonville. The next day, we went to pick up my cousin from college which is about two hours away, in Gainesville. Unfortunately, she had gotten Covid-19 due to her trip to Disney World a few weeks ago. The first few days of vacation were quite boring because of this. However, they had two beautiful cats, Juno and Max who kept me company. Juno was seven years old and Max was only a year old. My aunt had fostered Max when he was just a few weeks old. Max had severe ringworm. He eventually recovered and my aunt decided to adopt him. In a week, my cousin had recovered and very quickly we started going out. We drove for a few hours. We went to the new Jurassic World movie and then explored a huge outdoor mall they had called “Town Center”. A couple weeks later, we decided to foster a week old kitten. The first night was a huge struggle since we had no idea what we were doing. Slowly we got the hang of it. The three of us kept taking shifts every three hours in the night. My cousin and I went roller skating one day, it was so much fun. She used to roller blade as a kid so she got the hang of it very easily. However, for me, it took multiple falls to finally get a little bit of balance. Later, we went to M-Shack for lunch. We had burgers and french fries. Then, we spotted a hair salon close by. We then got our hair done and went back home with a new, fresh look. A week later, my cousin and I went to Gainesville and lived in her dorm for two days. There, we explored her college campus and went bowling. The next day, we went back to Jacksonville. On July 29, the three of us drove to Orlando and stayed in a hotel there overnight. The next day my aunt and I went to the airport and it was time for me to go back. .",
          "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/random/",
          "relUrl": "/random/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://aadyadaita.github.io/apcsa_indiv_repo_tri1/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}